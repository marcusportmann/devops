---
# file: roles/prometheus_alert_manager/tasks/main.yaml

- ansible.builtin.import_tasks: assert.yaml
  run_once: yes
  delegate_to: localhost


#   ___  ____       ____  ____  _____ ____ ___ _____ ___ ____
#  / _ \/ ___|     / ___||  _ \| ____/ ___|_ _|  ___|_ _/ ___|
# | | | \___ \ ____\___ \| |_) |  _|| |    | || |_   | | |
# | |_| |___) |_____|__) |  __/| |__| |___ | ||  _|  | | |___
#  \___/|____/     |____/|_|   |_____\____|___|_|   |___\____|
#
- include_tasks: ubuntu.yaml
  when: ansible_distribution == 'Ubuntu'
  tags:
  - unbound

- include_tasks: redhat.yaml
  when: ansible_os_family == 'RedHat'
  tags:
  - unbound


#  ____  ____   ___  __  __ _____ _____ _   _ _____ _   _ ____       _    _     _____ ____ _____   __  __    _    _   _    _    ____ _____ ____
# |  _ \|  _ \ / _ \|  \/  | ____|_   _| | | | ____| | | / ___|     / \  | |   | ____|  _ \_   _| |  \/  |  / \  | \ | |  / \  / ___| ____|  _ \
# | |_) | |_) | | | | |\/| |  _|   | | | |_| |  _| | | | \___ \    / _ \ | |   |  _| | |_) || |   | |\/| | / _ \ |  \| | / _ \| |  _|  _| | |_) |
# |  __/|  _ <| |_| | |  | | |___  | | |  _  | |___| |_| |___) |  / ___ \| |___| |___|  _ < | |   | |  | |/ ___ \| |\  |/ ___ \ |_| | |___|  _ <
# |_|   |_| \_\\___/|_|  |_|_____| |_| |_| |_|_____|\___/|____/  /_/   \_\_____|_____|_| \_\|_|   |_|  |_/_/   \_\_| \_/_/   \_\____|_____|_| \_\
#
- name: Install Prometheus Alert Manager
  block:
  - ansible.builtin.debug:
      msg: Check whether the Prometheus {{ prometheus_alert_manager_config.package_version }} package has been installed

  - stat:
      path: /usr/bin/alertmanager
    register: prometheus_alert_manager_installed_stat_result

  - ansible.builtin.shell:
      cmd: /usr/bin/alertmanager --version 2>&1 | head -1 | awk {'print $3'}
    register: prometheus_alert_manager_installed_version_output
    when: (prometheus_alert_manager_installed_stat_result.stat.exists == True)

  - ansible.builtin.set_fact:
      prometheus_alert_manager_installed_version: '{{ prometheus_alert_manager_installed_version_output.stdout }}'
    when: (prometheus_alert_manager_installed_stat_result.stat.exists == True)

  - ansible.builtin.set_fact:
      prometheus_alert_manager_installed_version: ''
    when: (prometheus_alert_manager_installed_stat_result.stat.exists == False)

  - block:
    - ansible.builtin.debug:
        msg: Install the Prometheus Alert Manager {{ prometheus_alert_manager_config.package_version }} package

    - name: Add the {{ prometheus_alert_manager_config.group }} group
      group:
        name: '{{ prometheus_alert_manager_config.group }}'
        gid: '{{ prometheus_alert_manager_config.group_id }}'
        state: present

    - name: Add the {{ prometheus_alert_manager_config.user }} user
      user:
        name: '{{ prometheus_alert_manager_config.user }}'
        uid: '{{ prometheus_alert_manager_config.user_id }}'
        group: '{{ prometheus_alert_manager_config.group }}'
        create_home: no
        shell: /usr/sbin/nologin
        state: present

    - name: Check whether the Prometheus Alert Manager service exists
      stat:
        path: /lib/systemd/system/alertmanager.service
      register: prometheus_alert_manager_service_stat_result

    - name: Stop the Prometheus Alert Manager service
      service:
        name: alertmanager.service
        state: stopped
      when: prometheus_alert_manager_service_stat_result.stat.exists == True
      register: prometheus_alert_manager_service_stopped

    - name: Check whether the Prometheus Alert Manager {{ prometheus_alert_manager_config.package_version }} package has been downloaded
      become: no
      local_action: stat path='{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/alertmanager-{{ prometheus_alert_manager_config.package_version }}.linux-amd64.tar.gz'
      register: prometheus_alert_manager_package_stat_result

    - name: Download the Prometheus Alert Manager {{ prometheus_alert_manager_config.package_version }} package
      become: no
      local_action: get_url url='https://github.com/prometheus/alertmanager/releases/download/v{{ prometheus_alert_manager_config.package_version }}/alertmanager-{{ prometheus_alert_manager_config.package_version }}.linux-amd64.tar.gz' dest='{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/alertmanager-{{ prometheus_alert_manager_config.package_version }}.linux-amd64.tar.gz' checksum={{ prometheus_alert_manager_config.package_checksum }}
      when: (prometheus_alert_manager_package_stat_result.stat.exists == False)

    - name: Remove the existing alertmanager binary
      ansible.builtin.file:
        path: /usr/bin/alertmanager
        state: absent

    - name: Remove the existing amtool binary
      ansible.builtin.file:
        path: /usr/bin/amtool
        state: absent

    - name: Extract the alertmanager binary from the Prometheus Alert Manager {{ prometheus_alert_manager_config.package_version }} package
      unarchive:
        src: '{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/alertmanager-{{ prometheus_alert_manager_config.package_version }}.linux-amd64.tar.gz'
        dest: /usr/bin
        owner: 'root'
        group: 'root'
        mode: '0755'
        extra_opts:
        - --strip-components=1
        - alertmanager-{{ prometheus_alert_manager_config.package_version }}.linux-amd64/alertmanager
        creates: /usr/bin/alertmanager
      notify: restart alertmanager

    - name: Extract the amtool binary from the Prometheus Alert Manager {{ prometheus_alert_manager_config.package_version }} package
      unarchive:
        src: '{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/alertmanager-{{ prometheus_alert_manager_config.package_version }}.linux-amd64.tar.gz'
        dest: /usr/bin
        owner: 'root'
        group: 'root'
        mode: '0755'
        extra_opts:
        - --strip-components=1
        - alertmanager-{{ prometheus_alert_manager_config.package_version }}.linux-amd64/amtool
        creates: /usr/bin/amtool
      notify: restart alertmanager

    - name: Create the {{ prometheus_alert_manager_config.etc_directory }} directory
      ansible.builtin.file:
        path: '{{ prometheus_alert_manager_config.etc_directory }}'
        owner: '{{ prometheus_alert_manager_config.user }}'
        group: '{{ prometheus_alert_manager_config.group }}'
        mode: '0550'
        state: directory

    when: (prometheus_alert_manager_installed_version != prometheus_alert_manager_config.package_version)

- name: Create the {{ prometheus_alert_manager_config.data_directory }} directory
  ansible.builtin.file:
    path: '{{ prometheus_alert_manager_config.data_directory }}'
    owner: '{{ prometheus_alert_manager_config.user }}'
    group: '{{ prometheus_alert_manager_config.group }}'
    mode: '0750'
    state: directory

- name: Generate the Prometheus Alert Manager configuration
  ansible.builtin.template:
    src: alertmanager.yaml.j2
    dest: '{{ prometheus_alert_manager_config.etc_directory }}/alertmanager.yml'
    owner: '{{ prometheus_alert_manager_config.user }}'
    group: '{{ prometheus_alert_manager_config.group }}'
    mode: '0440'
  notify: restart alertmanager

- name: Generate the Prometheus Alert Manager environment
  ansible.builtin.template:
    src: alertmanager-environment.j2
    dest: /etc/default/alertmanager
    mode: '0644'
  notify: restart alertmanager
  register: prometheus_alert_manager_environment_template_result

- name: Configure the Prometheus Alert Manager systemd unit
  ansible.builtin.template:
    src: alertmanager.service.j2
    dest: /lib/systemd/system/alertmanager.service
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: restart alertmanager
  register: prometheus_alert_manager_systemd_unit_template_result

- name: Reload the Prometheus Alert Manager service
  ansible.builtin.systemd:
    name: alertmanager
    daemon_reload: yes
  when: ((prometheus_alert_manager_environment_template_result.changed == True) or (prometheus_alert_manager_systemd_unit_template_result.changed == True))

- name: Ensure that the Prometheus Alert Manager service is started
  ansible.builtin.systemd:
    name: alertmanager
    state: started
    enabled: yes


#  ____  ____   ___  __  __ _____ _____ _   _ _____ _   _ ____    __  __ ____    _____ _____    _    __  __ ____
# |  _ \|  _ \ / _ \|  \/  | ____|_   _| | | | ____| | | / ___|  |  \/  / ___|  |_   _| ____|  / \  |  \/  / ___|
# | |_) | |_) | | | | |\/| |  _|   | | | |_| |  _| | | | \___ \  | |\/| \___ \    | | |  _|   / _ \ | |\/| \___ \
# |  __/|  _ <| |_| | |  | | |___  | | |  _  | |___| |_| |___) | | |  | |___) |   | | | |___ / ___ \| |  | |___) |
# |_|   |_| \_\\___/|_|  |_|_____| |_| |_| |_|_____|\___/|____/  |_|  |_|____/    |_| |_____/_/   \_\_|  |_|____/
#
- name: Prometheus MS Teams integration
  block:
  - name: Install prometheus-msteams
    block:
    - ansible.builtin.debug:
        msg: Check whether the prometheus-msteams {{ prometheus_alert_manager_config.prometheus_msteams_package_version }} package has been installed

    - stat:
        path: /usr/bin/prometheus-msteams
      register: prometheus_msteams_installed_stat_result

    - ansible.builtin.shell:
        cmd: /usr/bin/prometheus-msteams --version 2>&1
      register: prometheus_msteams_installed_version_output
      when: (prometheus_msteams_installed_stat_result.stat.exists == True)

    - ansible.builtin.set_fact:
        prometheus_msteams_installed_version: '{{ prometheus_msteams_installed_version_output.stdout }}'
      when: (prometheus_msteams_installed_stat_result.stat.exists == True)

    - ansible.builtin.set_fact:
        prometheus_msteams_installed_version: ''
      when: (prometheus_msteams_installed_stat_result.stat.exists == False)

    - block:
      - ansible.builtin.debug:
          msg: Install the prometheus-msteams {{ prometheus_alert_manager_config.prometheus_msteams_package_version }} package

      - name: Add the {{ prometheus_alert_manager_config.prometheus_msteams_group }} group
        group:
          name: '{{ prometheus_alert_manager_config.prometheus_msteams_group }}'
          gid: '{{ prometheus_alert_manager_config.prometheus_msteams_group_id }}'
          state: present

      - name: Add the {{ prometheus_alert_manager_config.prometheus_msteams_user }} user
        user:
          name: '{{ prometheus_alert_manager_config.prometheus_msteams_user }}'
          uid: '{{ prometheus_alert_manager_config.prometheus_msteams_user_id }}'
          group: '{{ prometheus_alert_manager_config.prometheus_msteams_group }}'
          create_home: no
          shell: /usr/sbin/nologin
          state: present

      - name: Check whether the prometheus-msteams service exists
        stat:
          path: /lib/systemd/system/prometheus-msteams.service
        register: prometheus_msteams_service_stat_result

      - name: Stop the prometheus-msteams service
        service:
          name: prometheus-msteams.service
          state: stopped
        when: prometheus_msteams_service_stat_result.stat.exists == True
        register: prometheus_msteams_service_stopped

      - name: Check whether the prometheus-msteams {{ prometheus_alert_manager_config.prometheus_msteams_package_version }} package has been downloaded
        become: no
        local_action: stat path='{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/prometheus-msteams-linux-amd64-{{ prometheus_alert_manager_config.prometheus_msteams_package_version }}'
        register: prometheus_msteams_package_stat_result

      - name: Download the prometheus-msteams {{ prometheus_alert_manager_config.prometheus_msteams_package_version }} package
        become: no
        local_action: get_url url='https://github.com/prometheus-msteams/prometheus-msteams/releases/download/{{ prometheus_alert_manager_config.prometheus_msteams_package_version }}/prometheus-msteams-linux-amd64' dest='{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/prometheus-msteams-linux-amd64-{{ prometheus_alert_manager_config.prometheus_msteams_package_version }}' checksum={{ prometheus_alert_manager_config.prometheus_msteams_package_checksum }}
        when: (prometheus_msteams_package_stat_result.stat.exists == False)

      - name: Remove the existing prometheus-msteams binary
        ansible.builtin.file:
          path: /usr/bin/prometheus-msteams
          state: absent

      - name: Copy the prometheus-msteams binary
        ansible.builtin.copy:
          src: '{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/prometheus-msteams-linux-amd64-{{ prometheus_alert_manager_config.prometheus_msteams_package_version }}'
          dest: '/usr/bin/prometheus-msteams'
          owner: '{{ prometheus_alert_manager_config.prometheus_msteams_user }}'
          group: '{{ prometheus_alert_manager_config.prometheus_msteams_group }}'
          mode: '0550'

      - name: Create the {{ prometheus_alert_manager_config.etc_directory }} directory
        ansible.builtin.file:
          path: '{{ prometheus_alert_manager_config.prometheus_msteams_etc_directory }}'
          owner: '{{ prometheus_alert_manager_config.prometheus_msteams_user }}'
          group: '{{ prometheus_alert_manager_config.prometheus_msteams_group }}'
          mode: '0550'
          state: directory

      when: (prometheus_msteams_installed_version != prometheus_alert_manager_config.prometheus_msteams_package_version)

  - name: Generate the prometheus-msteams message card template
    ansible.builtin.template:
      src: prometheus-msteams-card.tmpl.j2
      dest: '{{ prometheus_alert_manager_config.prometheus_msteams_etc_directory }}/card.tmpl'
      owner: '{{ prometheus_alert_manager_config.prometheus_msteams_user }}'
      group: '{{ prometheus_alert_manager_config.prometheus_msteams_group }}'
      mode: '0440'
    register: prometheus_msteams_message_card_template_result

  - name: Generate the prometheus-msteams environment
    ansible.builtin.template:
      src: prometheus-msteams-environment.j2
      dest: /etc/default/prometheus-msteams
      mode: '0644'
    register: prometheus_msteams_environment_template_result

  - name: Configure the prometheus-msteams systemd unit
    ansible.builtin.template:
      src: prometheus-msteams.service.j2
      dest: /lib/systemd/system/prometheus-msteams.service
      owner: 'root'
      group: 'root'
      mode: '0644'
    register: prometheus_msteams_systemd_unit_template_result

  - name: Restart the prometheus-msteams service
    ansible.builtin.systemd:
      name: prometheus-msteams
      state: restarted
      enabled: yes
      daemon_reload: yes
    when: ((prometheus_msteams_environment_template_result.changed == True) or (prometheus_msteams_systemd_unit_template_result.changed == True) or (prometheus_msteams_message_card_template_result.changed == True))

  - name: Ensure that the prometheus-msteams service is started
    ansible.builtin.systemd:
      name: prometheus-msteams
      state: started
      enabled: yes

  when: ((prometheus_alert_manager_config.prometheus_msteams_url is defined) and (prometheus_alert_manager_config.prometheus_msteams_url != None) and (prometheus_alert_manager_config.prometheus_msteams_url != ''))

