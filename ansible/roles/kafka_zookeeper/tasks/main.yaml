---
#file: roles/kafka_zookeeper/tasks/main.yaml

#   ___  ____       ____  ____  _____ ____ ___ _____ ___ ____
#  / _ \/ ___|     / ___||  _ \| ____/ ___|_ _|  ___|_ _/ ___|
# | | | \___ \ ____\___ \| |_) |  _|| |    | || |_   | | |
# | |_| |___) |_____|__) |  __/| |__| |___ | ||  _|  | | |___
#  \___/|____/     |____/|_|   |_____\____|___|_|   |___\____|
#
- include_tasks: ubuntu.yaml
  when: ansible_distribution == 'Ubuntu'
  tags:
  - unbound

- include_tasks: centos.yaml
  when: ansible_distribution == 'CentOS'
  tags:
  - unbound


#  _  __    _    _____ _  __    _      ________   ___  _  _______ _____ ____  _____ ____
# | |/ /   / \  |  ___| |/ /   / \    |__  / _ \ / _ \| |/ / ____| ____|  _ \| ____|  _ \
# | ' /   / _ \ | |_  | ' /   / _ \     / / | | | | | | ' /|  _| |  _| | |_) |  _| | |_) |
# | . \  / ___ \|  _| | . \  / ___ \   / /| |_| | |_| | . \| |___| |___|  __/| |___|  _ <
# |_|\_\/_/   \_\_|   |_|\_\/_/   \_\ /____\___/ \___/|_|\_\_____|_____|_|   |_____|_| \_\
#
- name: Create the /var/tmp/ansible/kafka-zookeeper directory
  file:
    path: /var/tmp/ansible/kafka-zookeeper
    owner: root
    group: root
    mode: '0700'
    state: directory

- name: Create the {{ kafka_zookeeper_etc_directory }} directory
  file:
    path: '{{ kafka_zookeeper_etc_directory }}'
    owner: kafka
    group: kafka
    mode: '0550'
    state: directory

- name: Create the {{ kafka_zookeeper_etc_directory }}/conf directory
  file:
    path: '{{ kafka_zookeeper_etc_directory }}/conf'
    owner: kafka
    group: kafka
    mode: '0550'
    state: directory

- name: Copy the Kafka ZooKeeper keys and certificates
  block:
  - name: Create the {{ kafka_zookeeper_etc_directory }}/pki directory
    file:
      path: '{{ kafka_zookeeper_etc_directory }}/pki'
      owner: kafka
      group: kafka
      mode: '0550'
      state: directory

  - name: Copy the CA certificate to the /var/tmp/ansible/kafka-zookeeper directory
    copy:
      src: pki/{{ kafka_cluster_name }}/ca.crt
      dest: /var/tmp/ansible/kafka-zookeeper/ca.crt
    register: kafka_zookeeper_ca_copy_result

#  - name: Copy the Kafka intermediate CA certificate to the /var/tmp/ansible/kafka-zookeeper directory
#    copy:
#      src: pki/{{ kafka_cluster_name }}/kafka-{{ kafka_cluster_name }}-ca.crt
#      dest: /var/tmp/ansible/kafka-zookeeper/kafka-{{ kafka_cluster_name }}-ca.crt
#    register: kafka_zookeeper_kafka_intermediate_ca_copy_result

  - name: Copy the host-specific ZooKeeper private key ({{ inventory_hostname_short }}.key) to the /var/tmp/ansible/kafka-zookeeper directory
    copy:
      src: pki/{{ kafka_cluster_name }}/{{inventory_hostname_short}}.key
      dest: /var/tmp/ansible/kafka-zookeeper/{{inventory_hostname_short}}.key
    register: kafka_zookeeper_private_key_copy_result

  - name: Copy the host-specific ZooKeeper certificate ({{ inventory_hostname_short }}.key) to the /var/tmp/ansible/kafka-zookeeper directory
    copy:
      src: pki/{{ kafka_cluster_name }}/{{inventory_hostname_short}}.crt
      dest: /var/tmp/ansible/kafka-zookeeper/{{inventory_hostname_short}}.crt
    register: kafka_zookeeper_certificate_copy_result

  - name: Generate or retrieve the password for the Kafka ZooKeeper keystores
    set_fact:
      kafka_zookeeper_keystore_password: "{{ lookup('password', 'credentials/{{ inventory_hostname_short }}-zookeeper-keystore-password chars=ascii_letters,digits length=16') }}"

  - name: Generate and copy the new Kafka ZooKeeper keystore if required
    block:
    - name: Generate the new Kafka ZooKeeper PKCS12 keystore
      shell:
        cmd: openssl pkcs12 -export -name '{{ inventory_hostname_short }}' -out /var/tmp/ansible/kafka-zookeeper/{{ inventory_hostname_short }}.p12 -inkey /var/tmp/ansible/kafka-zookeeper/{{ inventory_hostname_short }}.key -in /var/tmp/ansible/kafka-zookeeper/{{ inventory_hostname_short }}.crt -passout pass:{{ kafka_zookeeper_keystore_password }}

    - name: Remove the new Kafka ZooKeeper JKS keystore if it exists
      file:
        path: /var/tmp/ansible/kafka-zookeeper/{{ inventory_hostname_short }}.jks
        state: absent

    - name: Convert the new Kafka ZooKeeper PKCS12 keystore to a JKS keystore
      shell:
        cmd: keytool -importkeystore -srckeystore /var/tmp/ansible/kafka-zookeeper/{{ inventory_hostname_short }}.p12 -srcstoretype pkcs12 -srcstorepass {{ kafka_zookeeper_keystore_password }} -destkeystore /var/tmp/ansible/kafka-zookeeper/{{ inventory_hostname_short }}.jks -deststoretype JKS -deststorepass {{ kafka_zookeeper_keystore_password }}

    - name: Add the CA certificate to the Kafka ZooKeeper JKS keystore
      shell:
        cmd: keytool -importcert -noprompt -trustcacerts -alias 'CA' -file /var/tmp/ansible/kafka-zookeeper/ca.crt -keystore /var/tmp/ansible/kafka-zookeeper/{{ inventory_hostname_short }}.jks -storepass {{ kafka_zookeeper_keystore_password }}

    - name: Copy the new Kafka ZooKeeper JKS keystore
      copy:
        src: /var/tmp/ansible/kafka-zookeeper/{{ inventory_hostname_short }}.jks
        dest: '{{ kafka_zookeeper_etc_directory }}/pki/{{ inventory_hostname_short }}.jks'
        owner: kafka
        group: kafka
        mode: '0440'
        remote_src: yes

    when: (True or (kafka_zookeeper_ca_copy_result.changed == True) or (kafka_zookeeper_private_key_copy_result.changed == True) or (kafka_zookeeper_certificate_copy_result.changed == True))

- name: Create the {{ kafka_zookeeper_log_directory }} directory
  file:
    path: '{{ kafka_zookeeper_log_directory }}'
    owner: kafka
    group: kafka
    mode: '0750'
    state: directory

- name: Create the {{ kafka_zookeeper_data_directory }} directory
  file:
    path: '{{ kafka_zookeeper_data_directory }}'
    owner: kafka
    group: kafka
    mode: '0750'
    state: directory

- name: Create the {{ kafka_zookeeper_data_log_directory }} directory
  file:
    path: '{{ kafka_zookeeper_data_log_directory }}'
    owner: kafka
    group: kafka
    mode: '0750'
    state: directory

- name: Create the Kafka ZooKeeper configuration file
  template:
    src: zookeeper.properties.j2
    dest: '{{ kafka_zookeeper_etc_directory }}/conf/zookeeper.properties'
    owner: kafka
    group: kafka
    mode: '0440'
  register: kafka_zookeeper_configuration_file_template_result

- name: Generate or retrieve the password for the Kafka ZooKeeper admin user
  set_fact:
    kafka_zookeeper_admin_user_password: "{{ lookup('password', 'credentials/kafka-{{ kafka_cluster_name }}-zookeeper-admin-user-password chars=ascii_letters,digits length=16') }}"

- name: Generate or retrieve the password for the Kafka ZooKeeper kafka user
  set_fact:
    kafka_zookeeper_kafka_user_password: "{{ lookup('password', 'credentials/kafka-{{ kafka_cluster_name }}-zookeeper-kafka-user-password chars=ascii_letters,digits length=16') }}"

- name: Create the Kafka ZooKeeper JAAS configuration file
  template:
    src: zookeeper-jaas.conf.j2
    dest: '{{ kafka_zookeeper_etc_directory }}/conf/zookeeper-jaas.conf'
    owner: kafka
    group: kafka
    mode: '0440'
  register: kafka_zookeeper_jaas_configuration_file_template_result
  when: ((kafka_zookeeper_sasl_enabled is defined) and (kafka_zookeeper_sasl_enabled != None) and (kafka_zookeeper_sasl_enabled == true))

- name: Create the myid file containing the Kafka ZooKeeper instance ID
  template:
    src: myid.j2
    dest: '{{ kafka_zookeeper_data_directory }}/myid'
    owner: kafka
    group: kafka
    mode: '0440'
  when: ((kafka_zookeeper_hosts | length) > 1)

- name: Create the Kafka ZooKeeper Admin JAAS configuration file
  template:
    src: zookeeper-admin-jaas.conf.j2
    dest: '{{ kafka_zookeeper_etc_directory }}/conf/zookeeper-admin-jaas.conf'
    owner: kafka
    group: kafka
    mode: '0440'

- name: Create the Kafka ZooKeeper Shell TLS configuration file
  template:
    src: zookeeper-shell-tls.conf.j2
    dest: '{{ kafka_zookeeper_etc_directory }}/conf/zookeeper-shell-tls.conf'
    owner: kafka
    group: kafka
    mode: '0440'

- name: Configure the Kafka ZooKeeper service
  template:
    src: kafka-zookeeper.service.j2
    dest: /lib/systemd/system/kafka-zookeeper.service
  register: kafka_zookeeper_service_file_template_result

- name: Enable and start the Kafka ZooKeeper service
  systemd:
    name: kafka-zookeeper.service
    state: started
    enabled: yes

- name: Restart the Kafka ZooKeeper service if required
  systemd:
    name: kafka-zookeeper.service
    state: restarted
    enabled: yes
    daemon_reload: yes
  when: ((kafka_zookeeper_ca_copy_result.changed == True) or (kafka_zookeeper_private_key_copy_result.changed == True) or (kafka_zookeeper_certificate_copy_result.changed == True) or (kafka_zookeeper_configuration_file_template_result.changed == True) or (kafka_zookeeper_service_file_template_result.changed == True))
