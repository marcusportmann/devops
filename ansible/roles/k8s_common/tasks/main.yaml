---
# file: roles/k8s_common/tasks/main.yaml

#   ___  ____       ____  ____  _____ ____ ___ _____ ___ ____
#  / _ \/ ___|     / ___||  _ \| ____/ ___|_ _|  ___|_ _/ ___|
# | | | \___ \ ____\___ \| |_) |  _|| |    | || |_   | | |
# | |_| |___) |_____|__) |  __/| |__| |___ | ||  _|  | | |___
#  \___/|____/     |____/|_|   |_____\____|___|_|   |___\____|
#
- include_tasks: ubuntu.yaml
  when: ansible_distribution == "Ubuntu"
  tags:
  - unbound

- include_tasks: centos.yaml
  when: ansible_distribution == "CentOS"
  tags:
  - unbound


#  _  _____ ____    _   _ ____  _____ ____  ____       _    _   _ ____     ____ ____   ___  _   _ ____  ____
# | |/ ( _ ) ___|  | | | / ___|| ____|  _ \/ ___|     / \  | \ | |  _ \   / ___|  _ \ / _ \| | | |  _ \/ ___|
# | ' // _ \___ \  | | | \___ \|  _| | |_) \___ \    / _ \ |  \| | | | | | |  _| |_) | | | | | | | |_) \___ \
# | . \ (_) |__) | | |_| |___) | |___|  _ < ___) |  / ___ \| |\  | |_| | | |_| |  _ <| |_| | |_| |  __/ ___) |
# |_|\_\___/____/   \___/|____/|_____|_| \_\____/  /_/   \_\_| \_|____/   \____|_| \_\\___/ \___/|_|   |____/
#
- name: Add the k8s-admin group
  group:
    name: k8s-admin
    gid: '{{ k8s_k8s_admin_group_id}}'
    state: present

- name: Add the k8s-admin user with a specific uid and a primary group of 'k8s-admin'
  user:
    name: k8s-admin
    comment: Kubernetes Administrator
    uid: '{{ k8s_k8s_admin_user_id }}'
    group: k8s-admin
    groups:
    - k8s-admin
    - docker
    shell: /bin/bash
    state: present

- name: Allow k8s-admin group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%k8s-admin'
    line: '%k8s-admin ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'


#  _   _ _____ _     __  __
# | | | | ____| |   |  \/  |
# | |_| |  _| | |   | |\/| |
# |  _  | |___| |___| |  | |
# |_| |_|_____|_____|_|  |_|
#
- name: Install Helm
  block:
  - debug:
      msg: Check whether the helm {{ k8s_helm_version }} package has been installed

  - stat:
      path: /usr/bin/helm
    register: helm_installed_stat_result

  - shell:
      cmd: /usr/bin/helm version --short | head -1 | awk -F '+' {'print $1'} | cut -c2-
    register: helm_installed_version_output
    when: (helm_installed_stat_result.stat.exists == True)

  - set_fact:
      helm_installed_version: '{{ helm_installed_version_output.stdout }}'
    when: (helm_installed_stat_result.stat.exists == True)

  - set_fact:
      helm_installed_version: ''
    when: (helm_installed_stat_result.stat.exists == False)

  - block:
    - debug:
        msg: Install the helm {{ k8s_helm_version }} package

    - name: Check whether the helm {{ k8s_helm_version }} package has been downloaded
      become: no
      local_action: stat path=packages/helm-v{{ k8s_helm_version }}-linux-amd64.tar.gz
      register: helm_package_stat_result

    - name: Download the helm {{ k8s_helm_version }} package
      become: no
      local_action: get_url url='https://get.helm.sh/helm-v{{ k8s_helm_version }}-linux-amd64.tar.gz' dest='packages/helm-v{{ k8s_helm_version }}-linux-amd64.tar.gz' checksum={{ k8s_helm_package_checksum }}
      when: (helm_package_stat_result.stat.exists == False)

    - name: Remove the existing helm binary
      file:
        path: /usr/bin/helm
        state: absent

    - name: Extract the helm binary from the helm {{ k8s_helm_version }} package
      unarchive:
        src: packages/helm-v{{ k8s_helm_version }}-linux-amd64.tar.gz
        dest: /usr/bin
        extra_opts:
        - --strip-components=1
        - linux-amd64/helm
        creates: /usr/bin/helm

    when: (helm_installed_version != k8s_helm_version)

