---
# file: roles/k8s_worker/tasks/main.yml

- name: Create the /var/cache/ansible directory
  file:
    path: /var/cache/ansible
    state: directory

- name: Add the k8s-admin group
  group:
    name: k8s-admin
    gid: 310
    state: present

- name: Add the k8s-admin user with a specific uid and a primary group of 'k8s-admin'
  user:
    name: k8s-admin
    comment: Kubernetes Administrator
    uid: 310
    group: k8s-admin
    groups: docker
    shell: /bin/bash
    state: present

- include_tasks: ubuntu.yml
  when: ansible_distribution == "Ubuntu"
  tags:
    - unbound

- include_tasks: centos.yml
  when: ansible_distribution == "CentOS"
  tags:
    - unbound

- name: Check whether the kubelet service has been configured
  stat:
    path: /var/lib/kubelet/config.yaml
  register: kubelet_config_stat_result

- name: Check whether a CNI provider has been configured
  stat:
    path: /etc/cni
  register: etc_cni_stat_result

#- name: Copy the Weave CNI configuration from the first master node in the Kubernetes cluster
#  block:
#
#    - name: Fetch the /etc/cni/net.d/10-weave.conflist file from the first master node in the Kubernetes cluster
#      fetch:
#        src: /etc/cni/net.d/10-weave.conflist
#        dest: fetched_files
#      delegate_to: "{{ groups['k8s_master'][0] }}"
#
#    - name: Create the /etc/cni/net.d directory
#      file:
#        path: /etc/cni/net.d
#        owner: root
#        group: root
#        mode: 0750
#        state: directory
#
#    - name: Copy the /etc/cni/net.d/10-weave.conflist Weave CNI configuration file to the additional worker node
#      copy:
#        src: fetched_files/{{ inventory_hostname }}/etc/cni/net.d/10-weave.conflist
#        dest: /etc/cni/net.d
#
#  when: ((etc_cni_stat_result.stat.exists == False) and (k8s_cni_provider == 'weave'))

- name: Initializing the additional worker node in the Kubernetes cluster
  block:

    - command:
        cmd: /usr/bin/kubeadm token create --print-join-command
      register: kubeadm_join_command_result
      delegate_to: "{{ groups['k8s_master'][0] }}"

    - set_fact:
        kubeadm_join_command: "{{ kubeadm_join_command_result.stdout_lines[0] }}"

    - command:
        cmd: "{{ kubeadm_join_command }}"

  when: kubelet_config_stat_result.stat.exists == False

