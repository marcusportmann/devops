apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: monitoring
  namespace: monitoring-system  
spec:
  version: 7.6.1
  
  http:
      tls:
        selfSignedCertificate:
          disabled: true 
  
# 
# NodePort with TLS
#  
#   http:
#     service:
#       spec:
#         type: NodePort
#         ports:
#         - name: https
#           nodePort: 32540
#           port: 9200
#           protocol: TCP
#           targetPort: 9200
#     tls:
#       certificate:
#         secretName: monitoring-certs
            
{% if ((monitoring_elasticsearch_cluster_type is defined) and (monitoring_elasticsearch_cluster_type != None) and (monitoring_elasticsearch_cluster_type == 'minimal'))  %}

  nodeSets:
  - name: master
    count: 1
    config:
      node.master: true
      node.data: false
      node.ingest: false
      node.store.allow_mmap: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms320m -Xmx320m
          resources:
            requests:
              cpu: "100m"
              memory: "384Mi"
            limits:
              cpu: "1"
              memory: "640Mi"
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: {{ monitoring_elastic_storage_class_name}}
  - name: data    
    count: 1
    config:
      node.master: false
      node.data: true
      node.ingest: false
      node.store.allow_mmap: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms512m -Xmx512m
          resources:
            requests:
              cpu: "100m"
              memory: "512Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: {{ monitoring_elastic_storage_class_name }}
  - name: ingest
    count: 1
    config:
      node.master: false
      node.data: false
      node.ingest: true
      node.store.allow_mmap: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms320m -Xmx320m
          resources:
            requests:
              cpu: "100m"
              memory: "384Mi"
            limits:
              cpu: "1"
              memory: "640Mi"
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: {{ monitoring_elastic_storage_class_name}}

{% endif %}

{% if ((monitoring_elasticsearch_cluster_type is defined) and (monitoring_elasticsearch_cluster_type != None) and (monitoring_elasticsearch_cluster_type == 'full'))  %}

  nodeSets:
  - name: master
    count: 3
    config:
      node.master: true
      node.data: false
      node.ingest: false
      cluster.remote.connect: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms384m -Xmx384m
          resources:
            requests:
              cpu: "100m"
              memory: "384Mi"
            limits:
              cpu: "1"
              memory: "640Mi"
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: {{ monitoring_elastic_storage_class_name }}
  - name: data
    count: 3
    config:
      node.master: false
      node.data: true
      node.ingest: false
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms384m -Xmx384m
          resources:
            requests:
              cpu: "100m"
              memory: "384Mi"
            limits:
              cpu: "1"            
              memory: "640Mi"
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: {{ monitoring_elastic_storage_class_name }}
  - name: ingest
    count: 3
    config:
      node.master: false
      node.data: false
      node.ingest: true
    podTemplate:
      spec:
        containers:
        - name: elasticsearch
          env:
          - name: ES_JAVA_OPTS
            value: -Xms384m -Xmx384m
          resources:
            requests:
              cpu: "100m"
              memory: "384Mi"
            limits:
              cpu: "1"
              memory: "640Mi"
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
        storageClassName: {{ monitoring_elastic_storage_class_name }}      

{% endif %}


# See: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-quickstart.html
#      https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-managing-compute-resources.html
#      https://www.elastic.co/guide/en/cloud-on-k8s/master/k8s-advanced-node-scheduling.html

