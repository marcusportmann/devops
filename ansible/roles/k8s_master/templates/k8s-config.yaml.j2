apiVersion: kubeadm.k8s.io/v1beta2
kind: InitConfiguration

localAPIEndpoint:
  advertiseAddress: {{ k8s_apiserver_advertise_address }}
  bindPort: 6443
---
apiVersion: kubeadm.k8s.io/v1beta2
kind: ClusterConfiguration
kubernetesVersion: stable-1.17

apiServer:
  certSANs:
  - localhost
  - 127.0.0.1  
  {% if ((k8s_control_plane_endpoint is defined) and (k8s_control_plane_endpoint != None))  -%}- {{ k8s_control_plane_endpoint }}
  {% endif %}

  extraArgs:
    apiserver-count: "{{ groups["k8s_master"] | length }}"
    service-account-issuer: "kubernetes.default.svc"
    service-account-signing-key-file: "/etc/kubernetes/pki/sa.key"
    encryption-provider-config: "/etc/kubernetes/apiserver/encryption.yaml"
    
  extraVolumes:
  - name: "config"
    hostPath: /etc/kubernetes/apiserver
    mountPath: /etc/kubernetes/apiserver
    readOnly: true


{% if ((k8s_control_plane_endpoint is defined) and (k8s_control_plane_endpoint != None))  %}
controlPlaneEndpoint: {{ k8s_control_plane_endpoint }}
{% else %}
controlPlaneEndpoint: {{  groups["k8s_master"][0] }}
{% endif %}

{% if k8s_etcd_topology == "external" %}
etcd:
  external:
    endpoints:
    {% for host in groups["etcd"] %}- https://{{ hostvars[host]['inventory_hostname'] }}:2379
    {% endfor %}

    caFile: /etc/kubernetes/pki/etcd/ca.crt
    certFile: /etc/kubernetes/pki/etcd/{{ inventory_hostname_short }}-etcd-client.crt
    keyFile: /etc/kubernetes/pki/etcd/{{ inventory_hostname_short }}-etcd-client.key
{% else %}

    
    
{% endif %}

networking:
  dnsDomain: {{ k8s_cluster_domain }}
  serviceSubnet: {{ k8s_service_subnet }}
{% if k8s_cni_provider != "weave" %}
  podSubnet: {{ k8s_pod_subnet }}
{% endif %}


scheduler:
  extraVolumes:
  - name: "config"
    hostPath: /etc/kubernetes/scheduler
    mountPath: /etc/kubernetes/scheduler
    readOnly: true
  extraArgs:
    config: /etc/kubernetes/scheduler/scheduler-config.yaml
    
