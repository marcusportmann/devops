---
# file: roles/grafana/tasks/main.yaml


#  ____  _____ _____   _____ _    ____ _____ ____
# / ___|| ____|_   _| |  ___/ \  / ___|_   _/ ___|
# \___ \|  _|   | |   | |_ / _ \| |     | | \___ \
#  ___) | |___  | |   |  _/ ___ \ |___  | |  ___) |
# |____/|_____| |_|   |_|/_/   \_\____| |_| |____/
#
- ansible.builtin.set_fact:
    prometheus_server_url: http://{{ groups['prometheus_server'][0] }}:9090

- ansible.builtin.set_fact:
    prometheus_server_url: "http://{{ grafana_config.prometheus_servers[ansible_fqdn] }}:9090"
  when: ((grafana_config.prometheus_servers is defined) and (grafana_config.prometheus_servers[ansible_fqdn] is defined))

- ansible.builtin.debug:
    msg: "Prometheus Server URL: {{ prometheus_server_url }}"


#   ____ ____      _    _____ _    _   _    _
#  / ___|  _ \    / \  |  ___/ \  | \ | |  / \
# | |  _| |_) |  / _ \ | |_ / _ \ |  \| | / _ \
# | |_| |  _ <  / ___ \|  _/ ___ \| |\  |/ ___ \
#  \____|_| \_\/_/   \_\_|/_/   \_\_| \_/_/   \_\
#
- name: Add the grafana group
  ansible.builtin.group:
    name: grafana
    gid: '{{ grafana_config.group_id }}'
    state: present

- name: Add the grafana user
  ansible.builtin.user:
    name: '{{ grafana_config.user }}'
    uid: '{{ grafana_config.user_id }}'
    group: grafana
    home: /var/lib/grafana
    create_home: no
    shell: /usr/sbin/nologin
    state: present

- name: Create the /etc/grafana directory
  ansible.builtin.file:
    path: '/etc/grafana'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0550'
    state: directory

- name: Create the /etc/provisioning directory
  ansible.builtin.file:
    path: '/etc/grafana/provisioning'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0550'
    state: directory

- name: Create the /etc/provisioning/datasources directory
  ansible.builtin.file:
    path: '/etc/grafana/provisioning/datasources'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0550'
    state: directory

- name: Create the /etc/provisioning/dashboards directory
  ansible.builtin.file:
    path: '/etc/grafana/provisioning/dashboards'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0550'
    state: directory

- include_tasks: ubuntu.yaml
  when: ansible_distribution == 'Ubuntu'
  tags:
  - unbound

- include_tasks: redhat.yaml
  when: ansible_os_family == 'RedHat'
  tags:
  - unbound

- name: Create the {{ grafana_config.data_directory }} directory
  ansible.builtin.file:
    path: '{{ grafana_config.data_directory }}'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0750'
    state: directory

- name: Create the {{ grafana_config.log_directory }} directory
  ansible.builtin.file:
    path: '{{ grafana_config.log_directory }}'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0750'
    state: directory

- name: Create the Grafana configuration file
  ansible.builtin.template:
    src: grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0440'
  notify: restart grafana-server

- name: Create the Prometheus data source provisioning file
  ansible.builtin.template:
    src: prometheus-data-source.yaml.j2
    dest: /etc/grafana/provisioning/datasources/prometheus-data-source.yaml
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0440'
  notify: restart grafana-server

- name: Create the dashboard provisioning file
  ansible.builtin.template:
    src: all-dashboards.yaml.j2
    dest: /etc/grafana/provisioning/dashboards/all-dashboards.yaml
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0440'
  notify: restart grafana-server

- name: Create the {{ grafana_config.data_directory }}/dashboards directory
  ansible.builtin.file:
    path: '{{ grafana_config.data_directory }}/dashboards'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0550'
    state: directory

- name: Copy the prometheus-2-0-overview_rev2.json dashboard file
  ansible.builtin.template:
    src: dashboards/prometheus-2-0-overview_rev2.json.j2
    dest: '{{ grafana_config.data_directory }}/dashboards/prometheus-2-0-overview_rev2.json'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0440'
  notify: restart grafana-server

- name: Copy the nodes.json dashboard file
  ansible.builtin.template:
    src: dashboards/nodes.json.j2
    dest: '{{ grafana_config.data_directory }}/dashboards/nodes.json'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0440'
  notify: restart grafana-server

- name: Copy the kubernetes.json dashboard file
  ansible.builtin.template:
    src: dashboards/kubernetes.json.j2
    dest: '{{ grafana_config.data_directory }}/dashboards/kubernetes.json'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0440'
  notify: restart grafana-server
  when: ('k8s_master' in groups)

- name: Copy the zookeeper.json dashboard file
  ansible.builtin.template:
    src: dashboards/zookeeper.json.j2
    dest: '{{ grafana_config.data_directory }}/dashboards/zookeeper.json'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0440'
  notify: restart grafana-server
  when: (('kafka_zookeeper' in groups) or ('confluent_zookeeper' in groups) or ('zookeeper' in groups))

- name: Copy the kafka-overview.json dashboard file
  ansible.builtin.template:
    src: dashboards/kafka.json.j2
    dest: '{{ grafana_config.data_directory }}/dashboards/kafka.json'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0440'
  notify: restart grafana-server
  when: (('kafka_zookeeper' in groups) or ('confluent_zookeeper' in groups) or ('zookeeper' in groups))

- name: Copy the kafka-producers-consumers.json dashboard file
  ansible.builtin.template:
    src: dashboards/kafka-producers-consumers.json.j2
    dest: '{{ grafana_config.data_directory }}/dashboards/kafka-producers-consumers.json'
    owner: '{{ grafana_config.user }}'
    group: '{{ grafana_config.group }}'
    mode: '0440'
  notify: restart grafana-server
  when: ((grafana_config.dashboards.kafka_producers_and_consumers.enabled) and (('kafka_zookeeper' in groups) or ('confluent_zookeeper' in groups) or ('zookeeper' in groups)))

- name: Ensure that the grafana-server service is started
  ansible.builtin.systemd:
    name: grafana-server
    state: started
    enabled: yes

- name: Retrieve the currently installed version of the Grafana pie chart panel plug-in
  ansible.builtin.shell:
    cmd: grafana-cli plugins ls | grep grafana-piechart-panel | awk  {'print $3'}
  register: grafana_pie_chart_panel_plugin_installed_version_output

- name: Install the Grafana pie chart panel plug-in {{ grafana_config.pie_chart_panel_plugin_version }}
  ansible.builtin.shell:
    cmd: grafana-cli plugins install grafana-piechart-panel {{ grafana_config.pie_chart_panel_plugin_version }}
  notify: restart grafana-server
  when: (grafana_pie_chart_panel_plugin_installed_version_output.stdout != grafana_config.pie_chart_panel_plugin_version)





