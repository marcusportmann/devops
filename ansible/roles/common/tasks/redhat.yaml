---
# file: roles/common/tasks/redhat.yaml

- debug:
    msg: Applying the RedHat-specific common configuration


#  ____   _    ____ _  __    _    ____ _____ ____
# |  _ \ / \  / ___| |/ /   / \  / ___| ____/ ___|
# | |_) / _ \| |   | ' /   / _ \| |  _|  _| \___ \
# |  __/ ___ \ |___| . \  / ___ \ |_| | |___ ___) |
# |_| /_/   \_\____|_|\_\/_/   \_\____|_____|____/
#
- name: Install the RedHat 7 packages
  yum:
    name:
    - bzip2
    - chrony
    - net-tools
    - python-yaml
    - python2-pip
    - screen
    - netcat
    state: present
  when: ansible_distribution_major_version == '7'

- name: Install EPEL repo
  yum:
    name: epel-release
    state: present
  when: ansible_distribution_major_version == '8'

- name: Install the RedHat 8 packages
  yum:
    name:
    - bzip2
    - chrony
    - net-tools
    - python3
    - python3-pip
    - python3-yaml
    - screen
    - netcat
    state: present
  when: ansible_distribution_major_version == '8'


#  ____ ___ ____    ____   _    ____ _  __    _    ____ _____ ____
# |  _ \_ _|  _ \  |  _ \ / \  / ___| |/ /   / \  / ___| ____/ ___|
# | |_) | || |_) | | |_) / _ \| |   | ' /   / _ \| |  _|  _| \___ \
# |  __/| ||  __/  |  __/ ___ \ |___| . \  / ___ \ |_| | |___ ___) |
# |_|  |___|_|     |_| /_/   \_\____|_|\_\/_/   \_\____|_____|____/
#
- name: Install the pyOpenSSL package using pip
  pip:
    name: pyOpenSSL
  when: ansible_distribution_major_version != '7'

- name: Install the pyOpenSSL package using pip (RedHat 7)
  shell:
    cmd: pip install --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org pyOpenSSL
  when: ansible_distribution_major_version == '7'


#  ____    _  _____  _     __     _____  _    _   _ __  __ _____
# |  _ \  / \|_   _|/ \    \ \   / / _ \| |  | | | |  \/  | ____|
# | | | |/ _ \ | | / _ \    \ \ / / | | | |  | | | | |\/| |  _|
# | |_| / ___ \| |/ ___ \    \ V /| |_| | |__| |_| | |  | | |___
# |____/_/   \_\_/_/   \_\    \_/  \___/|_____\___/|_|  |_|_____|
#
- name: If the data disk is present (sdb) then create the data volume group if it does not exist
  block:
  - name: Create the data volume group
    community.general.lvg:
      vg: data
      pvs: /dev/sdb

  - name: Collect only facts about hardware
    setup:
      gather_subset:
      - hardware

  when: (('sdb' in ansible_devices) and ('wwn' not in ansible_devices['sdb'])  and ('data' not in ansible_lvm.vgs))

- name: Initialise the /data directory
  block:
  - name: Create the /data directory
    file:
      path: /data
      owner: 'root'
      group: 'root'
      mode: '0755'
      state: directory

  - name: Create and format the data logical volume in the data volume group and mount it under the /data directory
    block:
    - name: Create the data logical volume in the data volume group
      community.general.lvol:
        vg: data
        lv: data
        size: 100%FREE
      when: ('data' not in ansible_lvm.lvs)

    - name: Format the data logical volume in the data volume group using the ext4 filesystem
      community.general.filesystem:
        fstype: xfs
        dev: /dev/data/data

    - name: Mount the data logical volume in the data volume group under the /data directory
      ansible.posix.mount:
        path: /data
        src: /dev/mapper/data-data
        fstype: xfs
        state: mounted

    when: ('data' in ansible_lvm.vgs)

  when: (common_config.initialise_data_directory == True)


#  _____ ___ ____  _______        ___    _     _
# |  ___|_ _|  _ \| ____\ \      / / \  | |   | |
# | |_   | || |_) |  _|  \ \ /\ / / _ \ | |   | |
# |  _|  | ||  _ <| |___  \ V  V / ___ \| |___| |___
# |_|   |___|_| \_\_____|  \_/\_/_/   \_\_____|_____|
#
- name: Enable the firewalld service
  systemd:
    name: firewalld
    state: started
    enabled: true

- name: Enable the chrony port
  firewalld:
    port: '123/udp'
    permanent: yes
    state: enabled
    immediate: yes

