---
# file: roles/common/tasks/redhat.yaml

- debug:
    msg: Applying the RedHat-specific common configuration
  
- name: Enable the firewalld service
  systemd:
    name: firewalld
    state: started
    enabled: true  


# NOTE: We no longer enable the EPEL repo. This has be done prior to executing this Ansible role.

#- name: Check whether the EPEL repo package has been downloaded
#  become: no
#  local_action: stat path='{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/epel-release-latest-7.noarch.rpm'
#  register: epel_package_stat_result
#
#- name: Download the EPEL package
#  become: no
#  local_action: get_url url='https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm' dest='{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/epel-release-latest-7.noarch.rpm'
#  when: (epel_package_stat_result.stat.exists == False)
#
#- name: Copy the EPEL package
#  copy:
#    src: '{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/epel-release-latest-7.noarch.rpm'
#    dest: /var/tmp/ansible/epel-release-latest-7.noarch.rpm
#
#- name: Install the EPEL package
#  yum:
#    name: /var/tmp/ansible/epel-release-latest-7.noarch.rpm
#    state: present
#
#- name: Enable the EPEL YUM repo
#  shell: yum-config-manager --enable epel-release



- name: Install the bzip2 package
  yum:
    name: bzip2
    state: present

- name: Install the ntp package
  yum:
    name: ntp
    state: present

- name: Install the ntpdate package
  yum:
    name: ntpdate
    state: present

- name: Install the python-yaml package
  yum:
    name: python-yaml
    state: present

- name: Install the screen package
  yum:
    name: screen
    state: present

- name: Install the net-tools package
  yum:
    name: net-tools
    state: present

- name: Install the python2-pip package
  yum:
    name: python2-pip
    state: present
  
- name: If the data disk is present (sdb) then create the data volume group if it does not exist
  block:
  - name: Create the data volume group
    lvg:
      vg: data
      pvs: /dev/sdb

  - name: Collect only facts about hardware
    setup:
      gather_subset:
      - hardware

  when: (('sdb' in ansible_devices) and ('wwn' not in ansible_devices['sdb'])  and ('data' not in ansible_lvm.vgs))

- name: Initialise the /data directory
  block:
  - name: Create the /data directory
    file:
      path: /data
      owner: 'root'
      group: 'root'
      mode: '0755'
      state: directory

  - name: Create and format the data logical volume in the data volume group and mount it under the /data directory
    block:
    - name: Create the data logical volume in the data volume group
      lvol:
        vg: data
        lv: data
        size: 100%FREE
      when: ('data' not in ansible_lvm.lvs)

    - name: Format the data logical volume in the data volume group using the ext4 filesystem
      filesystem:
        fstype: ext4
        dev: /dev/data/data

    - name: Mount the data logical volume in the data volume group under the /data directory
      mount:
        path: /data
        src: /dev/mapper/data-data
        fstype: ext4
        state: mounted

    when: ('data' in ansible_lvm.vgs)

  when: (common_config.initialise_data_directory == True)
