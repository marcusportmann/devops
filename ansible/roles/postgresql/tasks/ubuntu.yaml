---
# file: roles/postgresql/tasks/ubuntu.yaml

- debug:
    msg: Applying the Ubuntu-specific Postgresql configuration

- name: Allow all hosts access to tcp port 5432
  community.general.ufw:
    rule: allow
    port: '5432'
    proto: tcp

- ansible.builtin.set_fact:
    postgresql_config_directory: '/etc/postgresql/{{ postgresql_config.version }}/main'

- ansible.builtin.set_fact:
    postgresql_bin_directory: '/usr/lib/postgresql/{{ postgresql_config.version }}/bin'

- ansible.builtin.set_fact:
    postgresql_data_directory: '{{ postgresql_config.data_directory_root|default("/var/lib") }}/postgresql/{{ postgresql_config.version }}/main'

- ansible.builtin.set_fact:
    postgresql_service: 'postgresql@{{ postgresql_config.version }}-main'

- name: Add the PostgreSQL Global Development Group (PGDG) apt key
  apt_key:
    url: https://www.postgresql.org/media/keys/ACCC4CF8.asc
    state: present

- name: Add the PostgreSQL Global Development Group (PGDG) repository
  apt_repository:
    repo: 'deb [arch=amd64] http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main'
    filename: 'pgdg'
    state: present
  register: add_pgdg_repository_result

- name: Update the Apt cache
  ansible.builtin.apt: update_cache=yes cache_valid_time=3600
  when: (add_pgdg_repository_result.changed == True)

- name: Install the PostgreSQL packages
  ansible.builtin.apt:
    state: present
    policy_rc_d: 101
    name:
     - 'postgresql-{{ postgresql_config.version }}={{ postgresql_config.ubuntu_package_version }}'
     - 'postgresql-client-{{ postgresql_config.version }}={{ postgresql_config.ubuntu_package_version }}'

- name: Install the python3-psycopg2 library
  ansible.builtin.apt:
    state: present
    name:
     - 'python3-psycopg2'

- name: Ensure all configured locales are present.
  locale_gen: "name={{ item }} state=present"
  with_items: "{{ postgresql_config.locales }}"
  notify: restart postgresql

- stat:
    path: '{{ postgresql_data_directory }}'
  register: postgresql_data_directory_stat_result

- name: Apply the custom data directory configuration
  block:
  - name: Ensure that the {{ postgresql_service }} service is stopped
    ansible.builtin.systemd:
      name: '{{ postgresql_service }}'
      state: stopped
      enabled: yes

  - name: Copy the /var/lib/postgresql directory to {{ postgresql_config.data_directory_root }}/postgresql.
    ansible.builtin.shell:
      cmd: rsync -av /var/lib/postgresql {{ postgresql_config.data_directory_root }}

  - name: Rename /var/lib/postgresql directory
    ansible.builtin.command:
      cmd: mv /var/lib/postgresql /var/lib/postgresql-backup

  - name: Edit the existing configuration file to change the data directory path
    ansible.builtin.lineinfile:
      path: '/etc/postgresql/{{ postgresql_config.version }}/main/postgresql.conf'
      regexp: '^data_directory ='
      line: "data_directory = '{{ postgresql_data_directory }}'"
      owner: root
      group: root
      mode: '0644'

  when: ((postgresql_config.data_directory_root is defined) and (postgresql_config.data_directory_root != None) and (postgresql_data_directory_stat_result.stat.exists == False))

- name: Generate the /etc/profile.d/postgresql.sh file
  ansible.builtin.template:
    src: postgresql.sh.j2
    dest: /etc/profile.d/postgresql.sh
    owner: 'root'
    group: 'root'
    mode: '0755'

- meta: flush_handlers
