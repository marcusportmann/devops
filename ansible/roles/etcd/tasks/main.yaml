---
# file: roles/etcd/tasks/main.yaml

- import_tasks: assert.yaml
  run_once: yes
  delegate_to: localhost


#  ____  _____ _____   _____ _    ____ _____ ____
# / ___|| ____|_   _| |  ___/ \  / ___|_   _/ ___|
# \___ \|  _|   | |   | |_ / _ \| |     | | \___ \
#  ___) | |___  | |   |  _/ ___ \ |___  | |  ___) |
# |____/|_____| |_|   |_|/_/   \_\____| |_| |____/
#
- set_fact:
    etcd_cluster_name: '{{ item }}'
  when: (ansible_fqdn in etcd_config.clusters[item].hosts)
  loop: '{{ etcd_config.clusters | flatten(1) }}'

- set_fact:
    etcd_cluster_endpoints: "{{ etcd_cluster_endpoints | default([]) + [':'.join((item,'2379'))] }}"
  loop: "{{ etcd_config.clusters[etcd_cluster_name].hosts }}"


#   ___  ____       ____  ____  _____ ____ ___ _____ ___ ____
#  / _ \/ ___|     / ___||  _ \| ____/ ___|_ _|  ___|_ _/ ___|
# | | | \___ \ ____\___ \| |_) |  _|| |    | || |_   | | |
# | |_| |___) |_____|__) |  __/| |__| |___ | ||  _|  | | |___
#  \___/|____/     |____/|_|   |_____\____|___|_|   |___\____|
#
- include_tasks: ubuntu.yaml
  when: ansible_distribution == 'Ubuntu'
  tags:
  - unbound

- include_tasks: redhat.yaml
  when: ansible_os_family == 'RedHat'
  tags:
  - unbound


#  _____ _____ ____ ____
# | ____|_   _/ ___|  _ \
# |  _|   | || |   | | | |
# | |___  | || |___| |_| |
# |_____| |_| \____|____/
#
- name: Add the {{ etcd_config.group }} group
  group:
    name: '{{ etcd_config.group }}'
    gid: '{{ etcd_config.group_id }}'
    state: present

- name: Add the {{ etcd_config.user }} user
  user:
    name: '{{ etcd_config.user }}'
    uid: '{{ etcd_config.user_id }}'
    group: '{{ etcd_config.group }}'
    home: /var/lib/etcd
    create_home: no
    shell: /usr/sbin/nologin
    state: present

- name: Copy the keys and certificates for the etcd cluster
  block:
  - name: Create the {{ etcd_config.etc_directory }}/pki directory
    file:
      path: '{{ etcd_config.etc_directory }}/pki'
      owner: '{{ etcd_config.user }}'
      group: '{{ etcd_config.group }}'
      mode: 0770
      state: directory

  - name: Copy the Etcd CA certificate
    copy:
      src: "{{ pki_root }}/{{ role_name }}/{{ etcd_cluster_name }}/ca.crt"
      dest: "{{ etcd_config.etc_directory }}/pki/ca.crt"

  - name: Copy the Etcd intermediate CA certificate
    copy:
      src: "{{ pki_root }}/{{ role_name }}/{{ etcd_cluster_name }}/etcd-ca-{{ etcd_cluster_name.replace('_', '-') }}.crt"
      dest: "{{ etcd_config.etc_directory }}/pki/etcd-ca-{{ etcd_cluster_name.replace('_', '-') }}.crt"

  - name: Copy the etcd-{{ etcd_cluster_name.replace('_', '-') }}.key private key
    copy:
      src: "{{ pki_root }}/{{ role_name }}/{{ etcd_cluster_name }}/etcd-{{ etcd_cluster_name.replace('_', '-') }}.key"
      dest: "{{ etcd_config.etc_directory }}/pki/etcd-{{ etcd_cluster_name.replace('_', '-') }}.key"

  - name: Copy the etcd-{{ etcd_cluster_name.replace('_', '-') }}.crt certificate
    copy:
      src: "{{ pki_root }}/{{ role_name }}/{{ etcd_cluster_name }}/etcd-{{ etcd_cluster_name.replace('_', '-') }}.crt"
      dest: "{{ etcd_config.etc_directory }}/pki/etcd-{{ etcd_cluster_name.replace('_', '-') }}.crt"

  - name: Copy the {{ ansible_hostname }}.key private key
    copy:
      src: "{{ pki_root }}/{{ role_name }}/{{ etcd_cluster_name }}/{{ ansible_hostname }}.key"
      dest: "{{ etcd_config.etc_directory }}/pki/{{ ansible_hostname }}.key"

  - name: Copy the {{ ansible_hostname }}.crt certificate
    copy:
      src: "{{ pki_root }}/{{ role_name }}/{{ etcd_cluster_name }}/{{ ansible_hostname }}.crt"
      dest: "{{ etcd_config.etc_directory }}/pki/{{ ansible_hostname }}.crt"

  - name: Copy the etcd-{{ etcd_cluster_name }}-client.key private key
    copy:
      src: "{{ pki_root }}/{{ role_name }}/{{ etcd_cluster_name }}/etcd-client-{{ etcd_cluster_name.replace('_', '-') }}.key"
      dest: "{{ etcd_config.etc_directory }}/pki/etcd-client-{{ etcd_cluster_name.replace('_', '-') }}.key"

  - name: Copy the etcd-{{ etcd_cluster_name }}-client.crt certificate
    copy:
      src: "{{ pki_root }}/{{ role_name }}/{{ etcd_cluster_name }}/etcd-client-{{ etcd_cluster_name.replace('_', '-') }}.crt"
      dest: "{{ etcd_config.etc_directory }}/pki/etcd-client-{{ etcd_cluster_name.replace('_', '-') }}.crt"

- name: Create the /var/lib/etcd directory
  file:
    path: /var/lib/etcd
    owner: '{{ etcd_config.user }}'
    group: '{{ etcd_config.group }}'
    mode: '0770'
    state: directory

- name: Install etcd
  block:
  - debug:
      msg: Check whether the etcd {{ etcd_config.package_version }} package has been installed

  - stat:
      path: /bin/etcd
    register: etcd_installed_stat_result

  - shell:
      cmd: /bin/etcd --version | head -n1 | awk  {'print $3'}
    register: etcd_installed_version_output
    when: (etcd_installed_stat_result.stat.exists == True)

  - set_fact:
      etcd_installed_version: '{{ etcd_installed_version_output.stdout }}'
    when: (etcd_installed_stat_result.stat.exists == True)

  - set_fact:
      etcd_installed_version: ''
    when: (etcd_installed_stat_result.stat.exists == False)

  - block:
    - debug:
        msg: Install the etcd {{ etcd_config.package_version }} package

    - name: Check whether the etcd {{ etcd_config.package_version }} package has been downloaded
      become: no
      local_action: stat path='{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/etcd-v{{ etcd_config.package_version }}-linux-amd64.tar.gz'
      register: etcd_package_stat_result

    - name: Download the etcd {{ etcd_config.package_version }} package
      become: no
      local_action: get_url url='https://github.com/etcd-io/etcd/releases/download/v{{ etcd_config.package_version }}/etcd-v{{ etcd_config.package_version }}-linux-amd64.tar.gz' dest='{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/etcd-v{{ etcd_config.package_version }}-linux-amd64.tar.gz' checksum={{ etcd_config.package_checksum }}
      when: (etcd_package_stat_result.stat.exists == False)

    - name: Remove the existing etcd binary
      file:
        path: /bin/etcd
        state: absent

    - name: Remove the existing etcdctl binary
      file:
        path: /bin/etcd
        state: absent

    - name: Extract the etcd binary from the etcd {{ etcd_config.package_version }} package
      unarchive:
        src: '{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/etcd-v{{ etcd_config.package_version }}-linux-amd64.tar.gz'
        dest: /var/tmp/ansible
        creates: /var/tmp/ansible/etcd-v{{ etcd_config.package_version }}-linux-amd64

    - name: Copy the etcd binary to the /bin directory
      copy:
        src: /var/tmp/ansible/etcd-v{{ etcd_config.package_version }}-linux-amd64/etcd
        dest: /usr/bin/etcd
        owner: 'root'
        group: 'root'
        mode: '0755'
        remote_src: yes

    - name: Copy the etcdctl binary to the /bin directory
      copy:
        src: /var/tmp/ansible/etcd-v{{ etcd_config.package_version }}-linux-amd64/etcdctl
        dest: /usr/bin/etcdctl
        owner: 'root'
        group: 'root'
        mode: '0755'
        remote_src: yes

    when: (etcd_installed_version != etcd_config.package_version)

- name: Create the etcd service file
  template:
    src: etcd.service.j2
    dest: /lib/systemd/system/etcd.service
  register: etcd_service_file_template_result

# NOTE: The restart of the etcd service MUST be non-blocking to handle the initial cluster
#       bootstrapping process where the first node in the cluster will block and wait for
#       the second node in the cluster to join, in the case of a 3 node cluster, before
#       completing the startup process. If the initial startup was blocking the subsequent
#       nodes would never be provisioned and the deployment of the cluster would hang.
- name: Restart the etcd service
  systemd:
    name: etcd
    state: restarted
    enabled: yes
    daemon_reload: yes
    no_block: yes
  when: (etcd_service_file_template_result.changed == True)

- name: Ensure that the etcd service is started
  systemd:
    name: etcd
    state: started
    enabled: yes

- name: Add the etcdctl alias to the /etc/profile.d/etcd.sh file
  lineinfile:
    dest: /etc/profile.d/etcd.sh
    state: present
    regexp: '^%alias etcdctl'
    line: alias etcdctl='etcdctl --key={{ etcd_config.etc_directory }}/pki/etcd-client-{{ etcd_cluster_name.replace('_', '-') }}.key --cert={{ etcd_config.etc_directory }}/pki/etcd-client-{{ etcd_cluster_name.replace('_', '-') }}.crt --cacert={{ etcd_config.etc_directory }}/pki/etcd-ca-{{ etcd_cluster_name.replace('_', '-') }}.crt --endpoints={{ etcd_cluster_endpoints | join(',') }}'
    create: yes
    owner: 'root'
    group: 'root'
    mode: '0755'







