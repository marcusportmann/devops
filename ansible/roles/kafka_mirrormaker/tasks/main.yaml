---
#file: roles/kafka_mirrormaker/tasks/main.yaml

- set_fact:
    kafka_mirrormaker_dc1_actual_hosts: "{{ kafka_mirrormaker_dc1_possible_hosts | intersect(groups['kafka_mirrormaker']) }}"
- set_fact:
    kafka_mirrormaker_dc2_actual_hosts: "{{ kafka_mirrormaker_dc2_possible_hosts | intersect(groups['kafka_mirrormaker']) }}"

- set_fact:
    kafka_server_dc1_actual_hosts: "{{ kafka_server_dc1_possible_hosts | intersect(groups['kafka_server']) }}"
- set_fact:
    kafka_server_dc2_actual_hosts: "{{ kafka_server_dc2_possible_hosts | intersect(groups['kafka_server']) }}"

- debug:
    msg: 'Kafka MirrorMaker DC1 hosts: {{ kafka_mirrormaker_dc1_actual_hosts  }}'
- debug:
    msg: 'Kafka MirrorMaker DC2 hosts: {{ kafka_mirrormaker_dc2_actual_hosts  }}'
- debug:
    msg: 'Kafka server DC1 hosts: {{ kafka_server_dc1_actual_hosts  }}'
- debug:
    msg: 'Kafka server DC2 hosts: {{ kafka_server_dc2_actual_hosts  }}'

- debug:
    msg: "Kafka MirrorMaker host {{ inventory_hostname }} is in DC1"
  when: (inventory_hostname in kafka_mirrormaker_dc1_actual_hosts)
- debug:
    msg: "Kafka MirrorMaker host {{ inventory_hostname }} is in DC2"
  when: (inventory_hostname in kafka_mirrormaker_dc2_actual_hosts)


#  _  __    _    _____ _  __    _      __  __ ___ ____  ____   ___  ____    __  __    _    _  _______ ____
# | |/ /   / \  |  ___| |/ /   / \    |  \/  |_ _|  _ \|  _ \ / _ \|  _ \  |  \/  |  / \  | |/ / ____|  _ \
# | ' /   / _ \ | |_  | ' /   / _ \   | |\/| || || |_) | |_) | | | | |_) | | |\/| | / _ \ | ' /|  _| | |_) |
# | . \  / ___ \|  _| | . \  / ___ \  | |  | || ||  _ <|  _ <| |_| |  _ <  | |  | |/ ___ \| . \| |___|  _ <
# |_|\_\/_/   \_\_|   |_|\_\/_/   \_\ |_|  |_|___|_| \_\_| \_\\___/|_| \_\ |_|  |_/_/   \_\_|\_\_____|_| \_\
#
- name: Add the kafka group
  group:
    name: kafka
    gid: '{{ kafka_group_id }}'
    state: present

- name: Add the kafka user
  user:
    name: kafka
    uid: '{{ kafka_user_id }}'
    group: kafka
    create_home: yes
    state: present

- name: Create the /var/tmp/ansible/kafka directory
  file:
    path: /var/tmp/ansible/kafka
    owner: root
    group: root
    mode: '0700'
    state: directory

- name: Create the {{ kafka_etc_directory }} directory
  file:
    path: '{{ kafka_etc_directory }}'
    owner: kafka
    group: kafka
    mode: '0550'
    state: directory

- name: Create the {{ kafka_etc_directory }}/conf directory
  file:
    path: '{{ kafka_etc_directory }}/conf'
    owner: kafka
    group: kafka
    mode: '0550'
    state: directory

- name: Setup the Kafka MirrorMaker keystore and Kafka CA truststore
  block:
  - name: Create the {{ kafka_etc_directory }}/pki directory
    file:
      path: '{{ kafka_etc_directory }}/pki'
      owner: kafka
      group: kafka
      mode: '0550'
      state: directory

  - name: Copy the Kafka CA certificate to the /var/tmp/ansible/kafka directory
    copy:
      src: pki/{{ kafka_cluster_name }}/ca.crt
      dest: /var/tmp/ansible/kafka/ca.crt
    register: kafka_ca_copy_result

  - name: Copy the Kafka MirrorMaker private key (kafka-{{ kafka_cluster_name }}-mirrormaker.key) to the /var/tmp/ansible/kafka directory
    copy:
      src: pki/{{ kafka_cluster_name }}/kafka-{{ kafka_cluster_name }}-mirrormaker.key
      dest: /var/tmp/ansible/kafka/kafka-{{ kafka_cluster_name }}-mirrormaker.key
    register: kafka_mirrormaker_private_key_copy_result

  - name: Copy the Kafka MirrorMaker certificate (kafka-{{ kafka_cluster_name }}-mirrormaker.crt) to the /var/tmp/ansible/kafka directory
    copy:
      src: pki/{{ kafka_cluster_name }}/kafka-{{ kafka_cluster_name }}-mirrormaker.crt
      dest: /var/tmp/ansible/kafka/kafka-{{ kafka_cluster_name }}-mirrormaker.crt
    register: kafka_mirrormaker_certificate_copy_result

  - name: Generate or retrieve the password for the Kafka server keystore
    set_fact:
      kafka_mirrormaker_keystore_password: "{{ lookup('password', 'credentials/kafka/{{ kafka_cluster_name }}/kafka-mirrormaker-keystore-password chars=ascii_letters,digits length=16') }}"

  - name: Generate or retrieve the password for the Kafka truststore
    set_fact:
      kafka_ca_truststore_password: "{{ lookup('password', 'credentials/kafka/{{ kafka_cluster_name }}/kafka-ca-truststore-password chars=ascii_letters,digits length=16') }}"

  - name: Generate the Kafka MirrorMaker keystore and Kafka CA truststore
    block:
    - name: Generate the Kafka MirrorMaker PKCS12 keystore
      openssl_pkcs12:
        action: export
        path: '{{ kafka_etc_directory }}/pki/mirrormaker.p12'
        friendly_name: 'kafka-{{ kafka_cluster_name }}-mirrormaker'
        privatekey_path: /var/tmp/ansible/kafka/kafka-{{ kafka_cluster_name }}-mirrormaker.key
        certificate_path: /var/tmp/ansible/kafka/kafka-{{ kafka_cluster_name }}-mirrormaker.crt
        passphrase: '{{ kafka_mirrormaker_keystore_password }}'
        owner: kafka
        group: kafka
        mode: '0440'
        state: present

    - name: Remove the Kafka CA PKCS12 truststore if it already exists
      file:
        path: '{{ kafka_etc_directory }}/pki/ca.p12'
        state: absent

    - name: Generate the Kafka CA PKCS12 truststore
      shell:
        cmd: keytool -importcert -noprompt -trustcacerts -alias "ca" -file /var/tmp/ansible/kafka/ca.crt -keystore '{{ kafka_etc_directory }}/pki/ca.p12' -storetype PKCS12 -storepass '{{ kafka_ca_truststore_password }}'

    - name: Set the permissions for the Kafka CA PKCS12 truststore
      file:
        path: '{{ kafka_etc_directory }}/pki/ca.p12'
        owner: kafka
        group: kafka
        mode: '0440'

    when: ((kafka_ca_copy_result.changed == True) or (kafka_mirrormaker_private_key_copy_result.changed == True) or (kafka_mirrormaker_certificate_copy_result.changed == True))

- name: Create the {{ kafka_log_directory }} directory
  file:
    path: '{{ kafka_log_directory }}'
    owner: kafka
    group: kafka
    mode: '0750'
    state: directory

# NOTE: This is the password Kafka MirrorMaker uses to connect to the Kafka cluster
- name: Generate or retrieve the password for the Kafka MirrorMaker user
  set_fact:
    kafka_mirrormaker_user_password: "{{ lookup('password', 'credentials/kafka/{{ kafka_cluster_name }}/kafka-mirrormaker-user-password chars=ascii_letters,digits length=16') }}"

- name: Create the Kafka MirrorMaker configuration file
  template:
    src: mirrormaker.properties.j2
    dest: '{{ kafka_etc_directory }}/conf/mirrormaker.properties'
    owner: kafka
    group: kafka
    mode: '0440'
  register: kafka_mirrormaker_configuration_template_result

#- name: Create the Kafka MirrorMaker JAAS configuration file
#  template:
#    src: mirrormaker-jaas.conf.j2
#    dest: '{{ kafka_etc_directory }}/conf/mirrormaker-jaas.conf'
#    owner: kafka
#    group: kafka
#    mode: '0440'
#  register: kafka_mirrormaker_jaas_configuration_template_result

- name: Configure the Kafka MirrorMaker service
  template:
    src: mirrormaker.service.j2
    dest: /lib/systemd/system/mirrormaker.service
  register: kafka_mirrormaker_service_file_template_result

- name: Restart the Kafka MirrorMaker service if required
  systemd:
    name: mirrormaker.service
    state: restarted
    enabled: yes
    daemon_reload: yes
  when: ((kafka_ca_copy_result.changed == True) or (kafka_mirrormaker_private_key_copy_result.changed == True) or (kafka_mirrormaker_certificate_copy_result.changed == True) or (kafka_mirrormaker_configuration_template_result.changed == True) or (kafka_server_service_file_template_result.changed == True))
