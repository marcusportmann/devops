---
# file: roles/k8s_istio/tasks/main.yaml

#  ___ ____ _____ ___ ___   ____ _____ _
# |_ _/ ___|_   _|_ _/ _ \ / ___|_   _| |
#  | |\___ \ | |  | | | | | |     | | | |
#  | | ___) || |  | | |_| | |___  | | | |___
# |___|____/ |_| |___\___/ \____| |_| |_____|
#
- name: Install istioctl
  block:
  - debug:
      msg: Check whether the istioctl {{ k8s_config.istio.package_version }} package has been installed

  - stat:
      path: /usr/bin/istioctl
    register: istioctl_installed_stat_result

  - shell:
      cmd: /usr/bin/istioctl version --remote=false
    register: istioctl_installed_version_output
    when: (istioctl_installed_stat_result.stat.exists == True)

  - set_fact:
      istioctl_installed_version: '{{ istioctl_installed_version_output.stdout }}'
    when: (istioctl_installed_stat_result.stat.exists == True)

  - set_fact:
      istioctl_installed_version: ''
    when: (istioctl_installed_stat_result.stat.exists == False)

  - block:
    - debug:
        msg: Install the istioctl {{ k8s_config.istio.package_version }} package

    - name: Check whether the istioctl {{ k8s_config.istio.package_version }} package has been downloaded
      become: no
      local_action: stat path='{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/istioctl-{{ k8s_config.istio.package_version }}-linux-amd64.tar.gz'
      register: istioctl_package_stat_result

    - name: Download the istioctl {{ k8s_config.istio.package_version }} package
      become: no
      local_action: get_url url='https://github.com/istio/istio/releases/download/{{ k8s_config.istio.package_version }}/istioctl-{{ k8s_config.istio.package_version }}-linux-amd64.tar.gz' dest='{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/istioctl-{{ k8s_config.istio.package_version }}-linux-amd64.tar.gz' checksum={{ k8s_config.istio.istioctl_package_checksum }}
      when: (istioctl_package_stat_result.stat.exists == False)

    - name: Remove the existing istioctl binary
      file:
        path: /usr/bin/istioctl
        state: absent

    - name: Extract the istioctl binary from the istioctl {{ k8s_config.istio.package_version }} package
      unarchive:
        src: '{{ packages_root }}/{{ ansible_distribution | lower }}{{ ansible_distribution_major_version }}/istioctl-{{ k8s_config.istio.package_version }}-linux-amd64.tar.gz'
        dest: /usr/bin
        creates: /usr/bin/istioctl

    when: (istioctl_installed_version != k8s_config.istio.package_version)

  when: ((k8s_config.istio.enabled is defined) and (k8s_config.istio.enabled != None) and (k8s_config.istio.enabled == true))


#  _  _____ ____
# | |/ ( _ ) ___|
# | ' // _ \___ \
# | . \ (_) |__) |
# |_|\_\___/____/
#
# Apply the configuration for the Istio components to the Kubernetes cluster only to the last master node if there are no workers or the last worker node
- include_tasks: k8s.yaml
  when: (('k8s_worker' not in groups.keys()) and (groups['k8s_master'][((groups['k8s_master']|length) - 1)] == inventory_hostname)) or (('k8s_worker' in groups.keys()) and (groups['k8s_worker'][((groups['k8s_worker']|length) - 1)] == inventory_hostname))
