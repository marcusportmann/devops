apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  profile: minimal

  namespace: istio-system

  components:
    base:
      enabled: true
    cni:
      enabled: false
    egressGateways:
    - name: istio-egressgateway
      enabled: true
    ingressGateways:
    - name: istio-ingressgateway
      enabled: true
    istiodRemote:
      enabled: false
    pilot:
      enabled: true
  hub: docker.io/istio
  meshConfig:
    defaultConfig:
      proxyMetadata: {}
{% if ((k8s_config.monitoring.enabled is defined) and (k8s_config.monitoring.enabled != None) and (k8s_config.monitoring.enabled == True) and (k8s_config.monitoring.elasticsearch.enabled is defined) and (k8s_config.monitoring.elasticsearch.enabled != None) and (k8s_config.monitoring.elasticsearch.enabled == true) and (k8s_config.monitoring.jaeger.enabled is defined) and (k8s_config.monitoring.jaeger.enabled != None) and (k8s_config.monitoring.jaeger.enabled == true))  %}
      tracing:
        zipkin:
          address: jaeger-collector.monitoring-system.svc.{{ k8s_config.cluster_domain }}:9411
{% endif %}

    enablePrometheusMerge: true
    trustDomain: {{ k8s_config.cluster_domain }}

  values:
    base:
      enableCRDTemplates: false
      validationURL: ""
    gateways:

      istio-ingressgateway:
        autoscaleEnabled: true
        name: istio-ingressgateway
        type: NodePort
        ports:
        - name: status-port
          port: 15021
          targetPort: 15021
        - name: http2
          port: 8080
          targetPort: 8080
          nodePort: 30080
        - name: https
          port: 8443
          targetPort: 8443
          nodePort: 30443
        - name: tcp
          port: 31400
          targetPort: 41400
          nodePort: 31400
        - name: tls
          port: 15443
          targetPort: 15443
          nodePort: 31443
{% if ((k8s_config.monitoring.grafana.enabled is defined) and (k8s_config.monitoring.grafana.enabled != None) and (k8s_config.monitoring.grafana.enabled == True)) %}
        - name: https-grafana
          port: 3000
          targetPort: 3000
          nodePort: 32500
{% endif %}
{% if ((k8s_config.monitoring.tracing.enabled is defined) and (k8s_config.monitoring.tracing.enabled != None) and (k8s_config.monitoring.tracing.enabled == True)) %}
        - name: https-jaeger
          port: 16686
          targetPort: 16686
          nodePort: 32501
{% endif %}
{% if ((k8s_config.istio.kiali.enabled is defined) and (k8s_config.istio.kiali.enabled != None) and (k8s_config.istio.kiali.enabled == True))  %}
        - name: https-kiali
          port: 20001
          targetPort: 20001
          nodePort: 32502
{% endif %}
{% if ((k8s_config.monitoring.prometheus.enabled is defined) and (k8s_config.monitoring.prometheus.enabled != None) and (k8s_config.monitoring.prometheus.enabled == True)) %}
        - name: https-prometheus
          port: 9090
          targetPort: 9090
          nodePort: 32503
        - name: https-alert-manager
          port: 9093
          targetPort: 9093
          nodePort: 32504
{% endif %}

      istio-egressgateway:
        autoscaleEnabled: true
        env: {}
        name: istio-egressgateway
        secretVolumes:
        - mountPath: /etc/istio/egressgateway-certs
          name: egressgateway-certs
          secretName: istio-egressgateway-certs
        - mountPath: /etc/istio/egressgateway-ca-certs
          name: egressgateway-ca-certs
          secretName: istio-egressgateway-ca-certs
        type: ClusterIP
        zvpn: {}

    global:
      arch:
        amd64: 2
        ppc64le: 2
        s390x: 2
      configValidation: true
      defaultNodeSelector: {}
      defaultPodDisruptionBudget:
        enabled: true
      defaultResources:
        requests:
          cpu: 10m
      imagePullPolicy: ""
      imagePullSecrets: []
      istioNamespace: istio-system
      istiod:
        enableAnalysis: false
      jwtPolicy: third-party-jwt
      logAsJson: false
      logging:
        level: default:info
      meshNetworks: {}
      mountMtlsCerts: false
      multiCluster:
        clusterName: ""
        enabled: false
      network: ""
      omitSidecarInjectorConfigMap: false
      oneNamespace: false
      operatorManageWebhooks: false
      pilotCertProvider: istiod
      priorityClassName: ""
      proxy:
        autoInject: enabled
        clusterDomain: {{ k8s_config.cluster_domain }}
        componentLogLevel: misc:error
        enableCoreDump: false
        excludeIPRanges: ""
        excludeInboundPorts: ""
        excludeOutboundPorts: ""
        image: proxyv2
        includeIPRanges: '*'
        logLevel: warning
        privileged: false
        readinessFailureThreshold: 30
        readinessInitialDelaySeconds: 1
        readinessPeriodSeconds: 2
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        statusPort: 15020
        tracer: zipkin
      proxy_init:
        image: proxyv2
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 10m
            memory: 10Mi
      sds:
        token:
          aud: istio-ca
      sts:
        servicePort: 0
      useMCP: false
    istiodRemote:
      injectionURL: ""
    pilot:
      autoscaleEnabled: true
      autoscaleMax: 5
      autoscaleMin: 1
      configMap: true
      cpu:
        targetAverageUtilization: 80
      enableProtocolSniffingForInbound: true
      enableProtocolSniffingForOutbound: true
      env: {}
      image: pilot
      keepaliveMaxServerConnectionAge: 30m
      nodeSelector: {}
      replicaCount: 1
      traceSampling: 1
    telemetry:
      enabled: true
      v2:
        enabled: true
        metadataExchange:
          wasmEnabled: false
        prometheus:
          enabled: true
          wasmEnabled: false
        stackdriver:
          configOverride: {}
          enabled: false
          logging: false
          monitoring: false
          topology: false






