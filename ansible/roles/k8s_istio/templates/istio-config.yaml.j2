apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
spec:
  profile: minimal
  namespace: istio-system

  addonComponents:
{% if ((k8s_istio_grafana_enabled is defined) and (k8s_istio_grafana_enabled != None) and (k8s_istio_grafana_enabled == True))  %}
    grafana:
      enabled: true
{% else %}
    grafana:
      enabled: false
{% endif %}

{% if ((k8s_istio_kiali_enabled is defined) and (k8s_istio_kiali_enabled != None) and (k8s_istio_kiali_enabled == True))  %}
    kiali:
      enabled: true
{% else %}
    kiali:
      enabled: false
{% endif %}

{% if ((k8s_istio_prometheus_enabled is defined) and (k8s_istio_prometheus_enabled != None) and (k8s_istio_prometheus_enabled == True))  %}
    prometheus:
      enabled: true
{% else %}
    prometheus:
      enabled: false
{% endif %}

{% if ((k8s_istio_tracing_enabled is defined) and (k8s_istio_tracing_enabled != None) and (k8s_istio_tracing_enabled == True))  %}
    tracing:
      enabled: true
{% else %}
    tracing:
      enabled: false
{% endif %}

  components:
    egressGateways:
    - name: istio-engressgateway
      enabled: true

#       k8s:
#         overlays:
#         - kind: Deployment
#           name: istio-egressgateway
#           patches:
#           - path: spec.template.spec.volumes
#             value:
#             - name: istio-token
#               projected:
#                 sources:
#                   - serviceAccountToken:
#                       audience: istio-ca
#                       expirationSeconds: 43200
#                       path: istio-token
#             - hostPath:
#                 path: /var/run/sds
#               name: sdsudspath
#             - name: istio-certs
#               secret:
#                 optional: true
#                 secretName: istio.default
#             - name: egressgateway-certs
#               secret:
#                 optional: true
#                 secretName: istio-egressgateway-certs
#             - name: egressgateway-ca-certs
#               secret:
#                 optional: true
#                 secretName: istio-egressgateway-ca-certs
#           - path: spec.template.spec.containers.[name:istio-proxy].volumeMounts
#             value:
#               - mountPath: /var/run/sds
#                 name: sdsudspath
#                 readOnly: true
#               - mountPath: /var/run/secrets/tokens
#                 name: istio-token
#               - mountPath: /etc/certs
#                 name: istio-certs
#                 readOnly: true
#               - mountPath: /etc/istio/egressgateway-certs
#                 name: egressgateway-certs
#                 readOnly: true
#               - mountPath: /etc/istio/egressgateway-ca-certs
#                 name: egressgateway-ca-certs
#                 readOnly: true

    ingressGateways:
    - name: istio-ingressgateway
      enabled: true

  values:
    gateways:
      istio-ingressgateway:
        labels:
          app: istio-ingressgateway
          istio: istio-ingressgateway
        type: NodePort
        sds:
          enabled: true
        ports:
        - name: status-port
          port: 15020
          targetPort: 15020
        - name: http2
          port: 80
          targetPort: 80
          nodePort: 30080
        - name: https
          port: 443
          targetPort: 443
          nodePort: 30443

{% if ((k8s_istio_grafana_enabled is defined) and (k8s_istio_grafana_enabled != None) and (k8s_istio_grafana_enabled == True)) %}
        - name: https-grafana
          port: 3000
          targetPort: 3000
          nodePort: 32500
{% endif %}
{% if ((k8s_istio_tracing_enabled is defined) and (k8s_istio_tracing_enabled != None) and (k8s_istio_tracing_enabled == True)) %}
        - name: https-jaeger
          port: 16686
          targetPort: 16686
          nodePort: 32501
{% endif %}
{% if ((k8s_istio_kiali_enabled is defined) and (k8s_istio_kiali_enabled != None) and (k8s_istio_kiali_enabled == True))  %}
        - name: https-kiali
          port: 20001
          targetPort: 20001
          nodePort: 32502
{% endif %}

{% if ((k8s_istio_prometheus_enabled is defined) and (k8s_istio_prometheus_enabled != None) and (k8s_istio_prometheus_enabled == True)) %}
        - name: https-prometheus
          port: 9090
          targetPort: 9090
          nodePort: 32503
        - name: https-alert-manager
          port: 9093
          targetPort: 9093
          nodePort: 32504
{% endif %}

        - name: tcp
          port: 1400
          targetPort: 1400
          nodePort: 31400
        - name: tls
          port: 1443
          targetPort: 1443
          nodePort: 31443

    global:
      trustDomain: {{ k8s_cluster_domain }}
      mtls:
        auto: true
        enabled: false
      proxy:
        accessLogFile: "/dev/stdout"
        logLevel: "debug"
        clusterDomain: {{ k8s_cluster_domain }}
      sds:
        enabled: true

{% if ((k8s_monitoring_enabled is defined) and (k8s_monitoring_enabled != None) and (k8s_monitoring_enabled == True))  %}
      tracer:
        zipkin:
          address: jaeger-collector.monitoring-system.svc.{{ k8s_cluster_domain }}:9411
{% endif %}

    security:
      selfSigned: false
    sidecarInjectorWebhook:
      rewriteAppHTTPProbe: true
    grafana:
      security:
        enabled: false
    kiali:
{% if ((k8s_monitoring_enabled is defined) and (k8s_monitoring_enabled != None) and (k8s_monitoring_enabled == True) and (k8s_monitoring_prometheus_enabled is defined) and (k8s_monitoring_prometheus_enabled != None) and (k8s_monitoring_prometheus_enabled == True)) %}
      prometheusAddr: http://prometheus-server.monitoring-system.svc.{{ k8s_cluster_domain }}:9090
{% endif %}

      dashboard:
{% if ((k8s_monitoring_enabled is defined) and (k8s_monitoring_enabled != None) and (k8s_monitoring_enabled == True) and (k8s_monitoring_grafana_enabled is defined) and (k8s_monitoring_grafana_enabled != None) and (k8s_monitoring_grafana_enabled == True)) %}
        grafanaURL: https://{{ groups['k8s_master'][0] }}:32500/
        grafanaInClusterURL: http://grafana.monitoring-system.svc.{{ k8s_cluster_domain }}:3000
{% endif %}

{% if ((k8s_monitoring_enabled is defined) and (k8s_monitoring_enabled != None) and (k8s_monitoring_enabled == True) and (k8s_monitoring_jaeger_enabled is defined) and (k8s_monitoring_jaeger_enabled != None) and (k8s_monitoring_jaeger_enabled == True)) %}
        jaegerURL: https://{{ groups['k8s_master'][0] }}:32501/
        jaegerInClusterURL: http://jaeger-query.monitoring-system.svc.{{ k8s_cluster_domain }}:16686
{% endif %}

      security:
        enabled: false

