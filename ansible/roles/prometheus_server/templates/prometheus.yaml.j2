global:
  scrape_interval:     15s
  evaluation_interval: 15s

scrape_configs:


#    ____ ___  _   _ _____ _    _   _ _____ _   _ _____
#   / ___/ _ \| \ | |  ___| |  | | | | ____| \ | |_   _|
#  | |  | | | |  \| | |_  | |  | | | |  _| |  \| | | |
#  | |__| |_| | |\  |  _| | |__| |_| | |___| |\  | | |
#   \____\___/|_| \_|_|   |_____\___/|_____|_| \_| |_|
#
{% if ('confluent_kafka_mirrormaker' in groups) %}

{% endif %}

{% if ('confluent_kafka_server' in groups) %}

{% endif %}

{% if ('confluent_schema_registry' in groups) %}

{% endif %}



#   _  __    _    _____ _  __    _
#  | |/ /   / \  |  ___| |/ /   / \
#  | ' /   / _ \ | |_  | ' /   / _ \
#  | . \  / ___ \|  _| | . \  / ___ \
#  |_|\_\/_/   \_\_|   |_|\_\/_/   \_\
#
{% if ('kafka_mirrormaker' in groups) %}

{% endif %}

{% if ('kafka_server' in groups) %}

{% endif %}


#   _  ___   _ ____  _____ ____  _   _ _____ _____ _____ ____
#  | |/ / | | | __ )| ____|  _ \| \ | | ____|_   _| ____/ ___|
#  | ' /| | | |  _ \|  _| | |_) |  \| |  _|   | | |  _| \___ \
#  | . \| |_| | |_) | |___|  _ <| |\  | |___  | | | |___ ___) |
#  |_|\_\\___/|____/|_____|_| \_\_| \_|_____| |_| |_____|____/
#
{% if ('k8s_master' in groups) %}

- job_name: 'kubernetes-apiservers'
  scheme: https
  bearer_token_file: /etc/prometheus/k8s/token
  tls_config:
    ca_file: /etc/prometheus/k8s/ca.crt
  kubernetes_sd_configs:
  - role: endpoints
    api_server: https://{{ groups['k8s_master'][0] }}:6443
    tls_config:
      ca_file: /etc/prometheus/k8s/ca.crt
    bearer_token_file: /etc/prometheus/k8s/token
  relabel_configs:
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
    action: keep
    regex: default;kubernetes;https

- job_name: 'kubernetes-nodes'
  scheme: https
  bearer_token_file: /etc/prometheus/k8s/token
  tls_config:
    ca_file: /etc/prometheus/k8s/ca.crt
  kubernetes_sd_configs:
  - role: node
    api_server: https://{{ groups['k8s_master'][0] }}:6443
    tls_config:
      ca_file: /etc/prometheus/k8s/ca.crt
    bearer_token_file: /etc/prometheus/k8s/token
  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - target_label: __address__
    replacement: {{ groups['k8s_master'][0] }}:6443
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics

- job_name: 'kubernetes-cadvisor'
  scheme: https
  bearer_token_file: /etc/prometheus/k8s/token
  tls_config:
    ca_file: /etc/prometheus/k8s/ca.crt
  kubernetes_sd_configs:
  - role: node
    api_server: https://{{ groups['k8s_master'][0] }}:6443
    tls_config:
      ca_file: /etc/prometheus/k8s/ca.crt
    bearer_token_file: /etc/prometheus/k8s/token
  relabel_configs:
  - action: labelmap
    regex: __meta_kubernetes_node_label_(.+)
  - target_label: __address__
    replacement: {{ groups['k8s_master'][0] }}:6443
  - source_labels: [__meta_kubernetes_node_name]
    regex: (.+)
    target_label: __metrics_path__
    replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

- job_name: 'kubernetes-service-endpoints'
  scheme: https
  bearer_token_file: /etc/prometheus/k8s/token
  tls_config:
    ca_file: /etc/prometheus/k8s/ca.crt
  kubernetes_sd_configs:
  - role: endpoints
    api_server: https://{{ groups['k8s_master'][0] }}:6443
    tls_config:
      ca_file: /etc/prometheus/k8s/ca.crt
    bearer_token_file: /etc/prometheus/k8s/token
  relabel_configs:
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
    action: keep
    regex: true
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_port]
    action: replace
    regex: (\d+)
    target_label: __meta_kubernetes_pod_container_port_number
  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
    action: replace
    regex: ()
    target_label: __meta_kubernetes_service_annotation_prometheus_io_path
    replacement: /metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_pod_container_port_number, __meta_kubernetes_service_annotation_prometheus_io_path]
    target_label: __metrics_path__
    regex: (.+);(.+);(.+);(.+)
    replacement: /api/v1/namespaces/$1/services/$2:$3/proxy$4
  - target_label: __address__
    replacement: {{ groups['k8s_master'][0] }}:6443
  - action: labelmap
    regex: __meta_kubernetes_service_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    action: replace
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_service_name]
    action: replace
    target_label: kubernetes_name
  - source_labels: [__meta_kubernetes_pod_node_name]
    action: replace
    target_label: instance

- job_name: 'kubernetes-pods'
  scheme: https
  bearer_token_file: /etc/prometheus/k8s/token
  tls_config:
    ca_file: /etc/prometheus/k8s/ca.crt
  kubernetes_sd_configs:
  - role: pod
    api_server: https://{{ groups['k8s_master'][0] }}:6443
    tls_config:
      ca_file: /etc/prometheus/k8s/ca.crt
    bearer_token_file: /etc/prometheus/k8s/token
  relabel_configs:
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
    action: keep
    regex: true
  - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
    action: replace
    regex: ()
    target_label: __meta_kubernetes_pod_annotation_prometheus_io_path
    replacement: /metrics
  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name, __meta_kubernetes_pod_container_port_number, __meta_kubernetes_pod_annotation_prometheus_io_path]
    target_label: __metrics_path__
    regex: (.+);(.+);(.+);(.+)
    replacement: /api/v1/namespaces/$1/pods/$2:$3/proxy$4
  - target_label: __address__
    replacement: master_ip:443
  - action: labelmap
    regex: __meta_kubernetes_pod_label_(.+)
  - source_labels: [__meta_kubernetes_namespace]
    action: replace
    target_label: kubernetes_namespace
  - source_labels: [__meta_kubernetes_pod_name]
    action: replace
    target_label: kubernetes_pod_name
  - source_labels: [__meta_kubernetes_pod_node_name]
    action: replace
    target_label: instance

{% endif %}


#   _   _  ___  ____  _____ ____
#  | \ | |/ _ \|  _ \| ____/ ___|
#  |  \| | | | | | | |  _| \___ \
#  | |\  | |_| | |_| | |___ ___) |
#  |_| \_|\___/|____/|_____|____/
#
{% if ('monitored' in groups) -%}
{% set monitored_hosts = [] -%}
{% for host in groups['monitored'] -%}
  {% set _ = monitored_hosts.append("'%s:%d'" % (hostvars[host]['inventory_hostname'], prometheus_node_exporter_port)) -%}
{% endfor -%}
{% endif -%}

- job_name: nodes
  static_configs:
  - targets: [{{ monitored_hosts | join(',') }}]


#   ____  ____   ___  __  __ _____ _____ _   _ _____ _   _ ____
#  |  _ \|  _ \ / _ \|  \/  | ____|_   _| | | | ____| | | / ___|
#  | |_) | |_) | | | | |\/| |  _|   | | | |_| |  _| | | | \___ \
#  |  __/|  _ <| |_| | |  | | |___  | | |  _  | |___| |_| |___) |
#  |_|   |_| \_\\___/|_|  |_|_____| |_| |_| |_|_____|\___/|____/
#
- job_name: 'prometheus'
  scrape_interval: 5s
  scrape_timeout: 5s
  static_configs:
  - targets: ['{{ inventory_hostname }}:9090']



#   ________   ___  _  _______ _____ ____  _____ ____
#  |__  / _ \ / _ \| |/ / ____| ____|  _ \| ____|  _ \
#    / / | | | | | | ' /|  _| |  _| | |_) |  _| | |_) |
#   / /| |_| | |_| | . \| |___| |___|  __/| |___|  _ <
#  /____\___/ \___/|_|\_\_____|_____|_|   |_____|_| \_\
#
{% set zookeeper_hosts = [] -%}

{% if ('confluent_zookeeper' in groups) -%}
{% for host in groups['confluent_zookeeper'] -%}
  {% set _ = zookeeper_hosts.append("'%s:%d'" % (hostvars[host]['inventory_hostname'], prometheus_zookeeper_jmx_exporter_port)) -%}
{% endfor -%}
{% endif -%}

{% if ('kafka_zookeeper' in groups) -%}
{% for host in groups['kafka_zookeeper'] -%}
  {% set _ = zookeeper_hosts.append("'%s:%d'" % (hostvars[host]['inventory_hostname'], prometheus_zookeeper_jmx_exporter_port)) -%}
{% endfor -%}
{% endif -%}

{% if ((zookeeper_hosts | length) > 0) %}

- job_name: 'zookeeper'
  static_configs:
  - targets: [{{ zookeeper_hosts | join(',') }}]

{% endif %}

