#!/bin/bash

extenddisk_parted() {
  echo -e "\n+++Current partition layout of $disk:+++"
  parted $disk --script unit s print
  if [ $logical == 1 ]
  then
    parted $disk --script rm $ext_partitionnum
    parted $disk --script "mkpart extended ${ext_startsector}s 100%"
    parted $disk --script "set $ext_partitionnum lba off"
    parted $disk --script "mkpart logical ext2 ${startsector}s 100%"
  else
    parted $disk --script rm $partitionnum
    parted $disk --script "mkpart primary ext2 ${startsector}s 100%"
  fi
  parted $disk --script set $partitionnum lvm on
  echo -e "\n\n+++New partition layout of $disk:+++"
  parted $disk --script unit s print
  # The 2nd script to expand the filesystem will be automatically executed on the next reboot.
  echo "#!/bin/bash
#Extend Physical Volume first
pvresize $p

#Extend LVM, using 100% of the free allocation units and resize filesystem
lvextend --extents +100%FREE $l --resizefs
chmod -x \$0" > /root/fsresize.sh
  chmod +x /root/fsresize.sh
  # Use a temporary systemd service or a rc.local script for extending the filesystem during next reboot, depending on what the OS is running.
  if(pidof systemd)
  then
    resizefs_systemd
  else
    resizefs_rclocal
  fi

  echo -e "Done. The system will reboot automatically in 15 seconds and resize the filesystem during reboot.\n"
  sleep 15
  # Reboot is necessary in most cases for the kernel to read the new partition table.
  reboot
}

resizefs_rclocal() {
  # Resize the filesystem using a script in rc.local if the OS run with sysvinit.
  echo "#Cleanup rc.local again
sed -i /etc/rc.local -e '/\/root\/fsresize\.sh/d' --follow-symlinks
sed -i /etc/rc.local -re 's/^#(exit 0)$/\1/' --follow-symlinks" >> /root/fsresize.sh

  sed -i /etc/rc.local -re 's/^(exit 0)$/#\1/' --follow-symlinks
  echo "/root/fsresize.sh" >> /etc/rc.local
}

resizefs_systemd() {
  # Resize the filesystem using a script called by a temporary systemd service file if the OS runs with systemd.
  echo "#Cleanup systemd autostart script again.
systemctl disable fsresize.service
rm -f /etc/systemd/system/fsresize.service" >> /root/fsresize.sh

  echo "[Unit]
Description=Filesystem resize script for LVM volume $l

[Service]
ExecStart=/root/fsresize.sh

[Install]
WantedBy=multi-user.target" > /etc/systemd/system/fsresize.service
  systemctl enable fsresize.service
}

p=/dev/sda4
l=/dev/system/root

# Fill variables for later use.
disk=$(echo $p | rev | cut -c 2- | rev)
diskshort=$(echo $disk | grep -Po '[^\/]+$')
partitionnum=$(echo $p | grep -Po '\d$')
startsector=$(fdisk -u -l $disk | grep $p | awk '{print $2}')

# Detect LVM on logical/extended partition
layout=$(parted $disk --script unit s print)
if grep -Pq "^\s$partitionnum\s+.+?logical.+$" <<< "$layout"
then
  echo -e "Detected LVM residing on a logical partition.\n"
  logical=1
  ext_partitionnum=$(parted $disk --script unit s print | grep extended | grep -Po '^\s\d\s' | tr -d ' ')
  ext_startsector=$(parted $disk --script unit s print | grep extended | awk '{print $2}' | tr -d 's')
else
  echo -e "Detected LVM residing on a primary partition.\n"
  logical=0
fi

parted $disk --script unit s print | if ! grep -Pq "^\s$partitionnum\s+.+?[^,]+?lvm$"
then
  echo -e "Error: $p seems to have some flags other than the lvm flag set. Other flags are not supported."
  usage
fi

if ! (fdisk -u -l $disk | grep $disk | tail -1 | grep $p | grep -q "Linux LVM")
then
  echo -e "Error: $p is not the last LVM volume on disk $disk. Cannot expand.\n"
  usage
fi

extenddisk_parted
